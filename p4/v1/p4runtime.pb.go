// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p4/v1/p4runtime.proto

package p4_v1

import (
	context "context"
	fmt "fmt"
	v1 "github.com/antonjlin/p4-go/p4/config/v1"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//------------------------------------------------------------------------------
// Reserved controller-specified SDN port numbers for reference.
type SdnPort int32

const (
	SdnPort_SDN_PORT_UNKNOWN SdnPort = 0
	// SDN ports are numbered starting form 1.
	SdnPort_SDN_PORT_MIN SdnPort = 1
	// 0xfffffeff: The maximum value of an SDN port (physical or logical).
	SdnPort_SDN_PORT_MAX SdnPort = -257
	// Reserved SDN port numbers (0xffffff00 - 0xffffffff)
	// 0xfffffffa: Recirculate the packet back to ingress
	SdnPort_SDN_PORT_RECIRCULATE SdnPort = -6
	// 0xfffffffd: Send to CPU
	SdnPort_SDN_PORT_CPU SdnPort = -3
)

var SdnPort_name = map[int32]string{
	0:    "SDN_PORT_UNKNOWN",
	1:    "SDN_PORT_MIN",
	-257: "SDN_PORT_MAX",
	-6:   "SDN_PORT_RECIRCULATE",
	-3:   "SDN_PORT_CPU",
}

var SdnPort_value = map[string]int32{
	"SDN_PORT_UNKNOWN":     0,
	"SDN_PORT_MIN":         1,
	"SDN_PORT_MAX":         -257,
	"SDN_PORT_RECIRCULATE": -6,
	"SDN_PORT_CPU":         -3,
}

func (x SdnPort) String() string {
	return proto.EnumName(SdnPort_name, int32(x))
}

func (SdnPort) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{0}
}

type WriteRequest_Atomicity int32

const (
	// Required. This is the default behavior. The batch is processed in a
	// non-atomic manner from a data plane point of view. Each operation within
	// the batch must be attempted even if one or more encounter errors.
	// Every data plane packet is guaranteed to be processed according to
	// table contents as they are between two individual operations of the
	// batch, but there could be several packets processed that see each of
	// these intermediate stages.
	WriteRequest_CONTINUE_ON_ERROR WriteRequest_Atomicity = 0
	// Optional. Operations within the batch are committed to data plane until
	// an error is encountered. At this point, the operations must be rolled
	// back such that both software and data plane state is consistent with the
	// state before the batch was attempted. The resulting behavior is
	// all-or-none, except the batch is not atomic from a data plane point of
	// view. Every data plane packet is guaranteed to be processed according to
	// table contents as they are between two individual operations of the
	// batch, but there could be several packets processed that see each of
	// these intermediate stages.
	WriteRequest_ROLLBACK_ON_ERROR WriteRequest_Atomicity = 1
	// Optional. Every data plane packet is guaranteed to be processed according
	// to table contents before the batch began, or after the batch completed
	// and the operations were programmed to the hardware.
	// The batch is therefore treated as a transaction.
	WriteRequest_DATAPLANE_ATOMIC WriteRequest_Atomicity = 2
)

var WriteRequest_Atomicity_name = map[int32]string{
	0: "CONTINUE_ON_ERROR",
	1: "ROLLBACK_ON_ERROR",
	2: "DATAPLANE_ATOMIC",
}

var WriteRequest_Atomicity_value = map[string]int32{
	"CONTINUE_ON_ERROR": 0,
	"ROLLBACK_ON_ERROR": 1,
	"DATAPLANE_ATOMIC":  2,
}

func (x WriteRequest_Atomicity) String() string {
	return proto.EnumName(WriteRequest_Atomicity_name, int32(x))
}

func (WriteRequest_Atomicity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{0, 0}
}

type Update_Type int32

const (
	Update_UNSPECIFIED Update_Type = 0
	Update_INSERT      Update_Type = 1
	Update_MODIFY      Update_Type = 2
	Update_DELETE      Update_Type = 3
)

var Update_Type_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "INSERT",
	2: "MODIFY",
	3: "DELETE",
}

var Update_Type_value = map[string]int32{
	"UNSPECIFIED": 0,
	"INSERT":      1,
	"MODIFY":      2,
	"DELETE":      3,
}

func (x Update_Type) String() string {
	return proto.EnumName(Update_Type_name, int32(x))
}

func (Update_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{4, 0}
}

type SetForwardingPipelineConfigRequest_Action int32

const (
	SetForwardingPipelineConfigRequest_UNSPECIFIED SetForwardingPipelineConfigRequest_Action = 0
	// Verify that the target can realize the given config. Do not modify the
	// forwarding state in the target. Returns error if config is not provided
	// of if the provided config cannot be realized.
	SetForwardingPipelineConfigRequest_VERIFY SetForwardingPipelineConfigRequest_Action = 1
	// Save the config if the target can realize it. Do not modify the
	// forwarding state in the target. Any subsequent read/write requests must
	// refer to fields in the new config. Returns error if config is not
	// provided of if the provided config cannot be realized.
	SetForwardingPipelineConfigRequest_VERIFY_AND_SAVE SetForwardingPipelineConfigRequest_Action = 2
	// Verify, save and realize the given config. Clear the forwarding state
	// in the target. Returns error if config is not provided of if the
	// provided config cannot be realized.
	SetForwardingPipelineConfigRequest_VERIFY_AND_COMMIT SetForwardingPipelineConfigRequest_Action = 3
	// Realize the last saved, but not yet committed, config. Update the
	// forwarding state in the target by replaying the write requests since the
	// last config was saved. Config should not be provided for this action
	// type. Returns an error if no saved config is found or if a config is
	// provided with this message.
	SetForwardingPipelineConfigRequest_COMMIT SetForwardingPipelineConfigRequest_Action = 4
	// Verify, save and realize the given config, while preserving the
	// forwarding state in the target. This is an advanced use case to enable
	// changes to the P4 forwarding pipeline configuration with minimal traffic
	// loss. P4Runtime does not impose any constraints on the duration of the
	// traffic loss. The support for this option is not expected to be uniform
	// across all P4Runtime targets. A target that does not support this option
	// may return an UNIMPLEMENTED error. For targets that support this option,
	// an INVALID_ARGUMENT error is returned if no config is provided, or if
	// the existing forwarding state cannot be preserved for the given config
	// by the target.
	SetForwardingPipelineConfigRequest_RECONCILE_AND_COMMIT SetForwardingPipelineConfigRequest_Action = 5
)

var SetForwardingPipelineConfigRequest_Action_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "VERIFY",
	2: "VERIFY_AND_SAVE",
	3: "VERIFY_AND_COMMIT",
	4: "COMMIT",
	5: "RECONCILE_AND_COMMIT",
}

var SetForwardingPipelineConfigRequest_Action_value = map[string]int32{
	"UNSPECIFIED":          0,
	"VERIFY":               1,
	"VERIFY_AND_SAVE":      2,
	"VERIFY_AND_COMMIT":    3,
	"COMMIT":               4,
	"RECONCILE_AND_COMMIT": 5,
}

func (x SetForwardingPipelineConfigRequest_Action) String() string {
	return proto.EnumName(SetForwardingPipelineConfigRequest_Action_name, int32(x))
}

func (SetForwardingPipelineConfigRequest_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{41, 0}
}

// Specifies the fields to populate in the response.
type GetForwardingPipelineConfigRequest_ResponseType int32

const (
	// Default behaviour. Returns a ForwardingPipelineConfig with all fields set
	// as stored by the target.
	GetForwardingPipelineConfigRequest_ALL GetForwardingPipelineConfigRequest_ResponseType = 0
	// Reply by setting only the cookie field, omitting all other fields.
	GetForwardingPipelineConfigRequest_COOKIE_ONLY GetForwardingPipelineConfigRequest_ResponseType = 1
	// Reply by setting the p4info and cookie fields.
	GetForwardingPipelineConfigRequest_P4INFO_AND_COOKIE GetForwardingPipelineConfigRequest_ResponseType = 2
	// Reply by setting the p4_device_config and cookie fields.
	GetForwardingPipelineConfigRequest_DEVICE_CONFIG_AND_COOKIE GetForwardingPipelineConfigRequest_ResponseType = 3
)

var GetForwardingPipelineConfigRequest_ResponseType_name = map[int32]string{
	0: "ALL",
	1: "COOKIE_ONLY",
	2: "P4INFO_AND_COOKIE",
	3: "DEVICE_CONFIG_AND_COOKIE",
}

var GetForwardingPipelineConfigRequest_ResponseType_value = map[string]int32{
	"ALL":                      0,
	"COOKIE_ONLY":              1,
	"P4INFO_AND_COOKIE":        2,
	"DEVICE_CONFIG_AND_COOKIE": 3,
}

func (x GetForwardingPipelineConfigRequest_ResponseType) String() string {
	return proto.EnumName(GetForwardingPipelineConfigRequest_ResponseType_name, int32(x))
}

func (GetForwardingPipelineConfigRequest_ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{44, 0}
}

//------------------------------------------------------------------------------
type WriteRequest struct {
	DeviceId   uint64   `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	RoleId     uint64   `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ElectionId *Uint128 `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	// The write batch, comprising a list of Update operations. The P4Runtime
	// server may arbitrarily reorder messages within a batch to maximize
	// performance.
	Updates              []*Update              `protobuf:"bytes,4,rep,name=updates,proto3" json:"updates,omitempty"`
	Atomicity            WriteRequest_Atomicity `protobuf:"varint,5,opt,name=atomicity,proto3,enum=p4.v1.WriteRequest_Atomicity" json:"atomicity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{0}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *WriteRequest) GetRoleId() uint64 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *WriteRequest) GetElectionId() *Uint128 {
	if m != nil {
		return m.ElectionId
	}
	return nil
}

func (m *WriteRequest) GetUpdates() []*Update {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *WriteRequest) GetAtomicity() WriteRequest_Atomicity {
	if m != nil {
		return m.Atomicity
	}
	return WriteRequest_CONTINUE_ON_ERROR
}

type WriteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{1}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

type ReadRequest struct {
	DeviceId             uint64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Entities             []*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{2}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ReadRequest) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type ReadResponse struct {
	Entities             []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{3}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type Update struct {
	Type                 Update_Type `protobuf:"varint,1,opt,name=type,proto3,enum=p4.v1.Update_Type" json:"type,omitempty"`
	Entity               *Entity     `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}
func (*Update) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{4}
}

func (m *Update) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Update.Unmarshal(m, b)
}
func (m *Update) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Update.Marshal(b, m, deterministic)
}
func (m *Update) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Update.Merge(m, src)
}
func (m *Update) XXX_Size() int {
	return xxx_messageInfo_Update.Size(m)
}
func (m *Update) XXX_DiscardUnknown() {
	xxx_messageInfo_Update.DiscardUnknown(m)
}

var xxx_messageInfo_Update proto.InternalMessageInfo

func (m *Update) GetType() Update_Type {
	if m != nil {
		return m.Type
	}
	return Update_UNSPECIFIED
}

func (m *Update) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Entity struct {
	// Types that are valid to be assigned to Entity:
	//	*Entity_ExternEntry
	//	*Entity_TableEntry
	//	*Entity_ActionProfileMember
	//	*Entity_ActionProfileGroup
	//	*Entity_MeterEntry
	//	*Entity_DirectMeterEntry
	//	*Entity_CounterEntry
	//	*Entity_DirectCounterEntry
	//	*Entity_PacketReplicationEngineEntry
	//	*Entity_ValueSetEntry
	//	*Entity_RegisterEntry
	//	*Entity_DigestEntry
	Entity               isEntity_Entity `protobuf_oneof:"entity"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{5}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

type isEntity_Entity interface {
	isEntity_Entity()
}

type Entity_ExternEntry struct {
	ExternEntry *ExternEntry `protobuf:"bytes,1,opt,name=extern_entry,json=externEntry,proto3,oneof"`
}

type Entity_TableEntry struct {
	TableEntry *TableEntry `protobuf:"bytes,2,opt,name=table_entry,json=tableEntry,proto3,oneof"`
}

type Entity_ActionProfileMember struct {
	ActionProfileMember *ActionProfileMember `protobuf:"bytes,3,opt,name=action_profile_member,json=actionProfileMember,proto3,oneof"`
}

type Entity_ActionProfileGroup struct {
	ActionProfileGroup *ActionProfileGroup `protobuf:"bytes,4,opt,name=action_profile_group,json=actionProfileGroup,proto3,oneof"`
}

type Entity_MeterEntry struct {
	MeterEntry *MeterEntry `protobuf:"bytes,5,opt,name=meter_entry,json=meterEntry,proto3,oneof"`
}

type Entity_DirectMeterEntry struct {
	DirectMeterEntry *DirectMeterEntry `protobuf:"bytes,6,opt,name=direct_meter_entry,json=directMeterEntry,proto3,oneof"`
}

type Entity_CounterEntry struct {
	CounterEntry *CounterEntry `protobuf:"bytes,7,opt,name=counter_entry,json=counterEntry,proto3,oneof"`
}

type Entity_DirectCounterEntry struct {
	DirectCounterEntry *DirectCounterEntry `protobuf:"bytes,8,opt,name=direct_counter_entry,json=directCounterEntry,proto3,oneof"`
}

type Entity_PacketReplicationEngineEntry struct {
	PacketReplicationEngineEntry *PacketReplicationEngineEntry `protobuf:"bytes,9,opt,name=packet_replication_engine_entry,json=packetReplicationEngineEntry,proto3,oneof"`
}

type Entity_ValueSetEntry struct {
	ValueSetEntry *ValueSetEntry `protobuf:"bytes,10,opt,name=value_set_entry,json=valueSetEntry,proto3,oneof"`
}

type Entity_RegisterEntry struct {
	RegisterEntry *RegisterEntry `protobuf:"bytes,11,opt,name=register_entry,json=registerEntry,proto3,oneof"`
}

type Entity_DigestEntry struct {
	DigestEntry *DigestEntry `protobuf:"bytes,12,opt,name=digest_entry,json=digestEntry,proto3,oneof"`
}

func (*Entity_ExternEntry) isEntity_Entity() {}

func (*Entity_TableEntry) isEntity_Entity() {}

func (*Entity_ActionProfileMember) isEntity_Entity() {}

func (*Entity_ActionProfileGroup) isEntity_Entity() {}

func (*Entity_MeterEntry) isEntity_Entity() {}

func (*Entity_DirectMeterEntry) isEntity_Entity() {}

func (*Entity_CounterEntry) isEntity_Entity() {}

func (*Entity_DirectCounterEntry) isEntity_Entity() {}

func (*Entity_PacketReplicationEngineEntry) isEntity_Entity() {}

func (*Entity_ValueSetEntry) isEntity_Entity() {}

func (*Entity_RegisterEntry) isEntity_Entity() {}

func (*Entity_DigestEntry) isEntity_Entity() {}

func (m *Entity) GetEntity() isEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *Entity) GetExternEntry() *ExternEntry {
	if x, ok := m.GetEntity().(*Entity_ExternEntry); ok {
		return x.ExternEntry
	}
	return nil
}

func (m *Entity) GetTableEntry() *TableEntry {
	if x, ok := m.GetEntity().(*Entity_TableEntry); ok {
		return x.TableEntry
	}
	return nil
}

func (m *Entity) GetActionProfileMember() *ActionProfileMember {
	if x, ok := m.GetEntity().(*Entity_ActionProfileMember); ok {
		return x.ActionProfileMember
	}
	return nil
}

func (m *Entity) GetActionProfileGroup() *ActionProfileGroup {
	if x, ok := m.GetEntity().(*Entity_ActionProfileGroup); ok {
		return x.ActionProfileGroup
	}
	return nil
}

func (m *Entity) GetMeterEntry() *MeterEntry {
	if x, ok := m.GetEntity().(*Entity_MeterEntry); ok {
		return x.MeterEntry
	}
	return nil
}

func (m *Entity) GetDirectMeterEntry() *DirectMeterEntry {
	if x, ok := m.GetEntity().(*Entity_DirectMeterEntry); ok {
		return x.DirectMeterEntry
	}
	return nil
}

func (m *Entity) GetCounterEntry() *CounterEntry {
	if x, ok := m.GetEntity().(*Entity_CounterEntry); ok {
		return x.CounterEntry
	}
	return nil
}

func (m *Entity) GetDirectCounterEntry() *DirectCounterEntry {
	if x, ok := m.GetEntity().(*Entity_DirectCounterEntry); ok {
		return x.DirectCounterEntry
	}
	return nil
}

func (m *Entity) GetPacketReplicationEngineEntry() *PacketReplicationEngineEntry {
	if x, ok := m.GetEntity().(*Entity_PacketReplicationEngineEntry); ok {
		return x.PacketReplicationEngineEntry
	}
	return nil
}

func (m *Entity) GetValueSetEntry() *ValueSetEntry {
	if x, ok := m.GetEntity().(*Entity_ValueSetEntry); ok {
		return x.ValueSetEntry
	}
	return nil
}

func (m *Entity) GetRegisterEntry() *RegisterEntry {
	if x, ok := m.GetEntity().(*Entity_RegisterEntry); ok {
		return x.RegisterEntry
	}
	return nil
}

func (m *Entity) GetDigestEntry() *DigestEntry {
	if x, ok := m.GetEntity().(*Entity_DigestEntry); ok {
		return x.DigestEntry
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Entity) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Entity_ExternEntry)(nil),
		(*Entity_TableEntry)(nil),
		(*Entity_ActionProfileMember)(nil),
		(*Entity_ActionProfileGroup)(nil),
		(*Entity_MeterEntry)(nil),
		(*Entity_DirectMeterEntry)(nil),
		(*Entity_CounterEntry)(nil),
		(*Entity_DirectCounterEntry)(nil),
		(*Entity_PacketReplicationEngineEntry)(nil),
		(*Entity_ValueSetEntry)(nil),
		(*Entity_RegisterEntry)(nil),
		(*Entity_DigestEntry)(nil),
	}
}

type ExternEntry struct {
	// the extern_type_id is unique for a given architecture and must be in the
	// range [0x81, 0xfe].
	ExternTypeId         uint32   `protobuf:"varint,1,opt,name=extern_type_id,json=externTypeId,proto3" json:"extern_type_id,omitempty"`
	ExternId             uint32   `protobuf:"varint,2,opt,name=extern_id,json=externId,proto3" json:"extern_id,omitempty"`
	Entry                *any.Any `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternEntry) Reset()         { *m = ExternEntry{} }
func (m *ExternEntry) String() string { return proto.CompactTextString(m) }
func (*ExternEntry) ProtoMessage()    {}
func (*ExternEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{6}
}

func (m *ExternEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternEntry.Unmarshal(m, b)
}
func (m *ExternEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternEntry.Marshal(b, m, deterministic)
}
func (m *ExternEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternEntry.Merge(m, src)
}
func (m *ExternEntry) XXX_Size() int {
	return xxx_messageInfo_ExternEntry.Size(m)
}
func (m *ExternEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ExternEntry proto.InternalMessageInfo

func (m *ExternEntry) GetExternTypeId() uint32 {
	if m != nil {
		return m.ExternTypeId
	}
	return 0
}

func (m *ExternEntry) GetExternId() uint32 {
	if m != nil {
		return m.ExternId
	}
	return 0
}

func (m *ExternEntry) GetEntry() *any.Any {
	if m != nil {
		return m.Entry
	}
	return nil
}

type TableEntry struct {
	TableId uint32        `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Match   []*FieldMatch `protobuf:"bytes,2,rep,name=match,proto3" json:"match,omitempty"`
	Action  *TableAction  `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	// Should only be set if the match implies a TCAM lookup, i.e. at least one of
	// the match fields is Ternary or Range.  A higher number indicates higher
	// priority.  Only a highest priority entry that matches the packet must be
	// selected.  Multiple entries in the same table with the same priority value
	// are permitted.  See Section "TableEntry" in the specification for details
	// of the behavior.
	Priority int32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// Metadata (cookie) opaque to the target. There is no requirement of where
	// this is stored, as long as it is returned with the rest of the entry in
	// a Read RPC.
	ControllerMetadata uint64 `protobuf:"varint,5,opt,name=controller_metadata,json=controllerMetadata,proto3" json:"controller_metadata,omitempty"`
	// meter_config and counter_data are convenience fields that enable the
	// controller to configure the direct resources associated with the table at
	// the same time as a match-action entry is inserted or modified.
	// Table write:
	//   - If the table does not contain a direct resource, then setting the
	//     corresponding direct resource field in any table write operation will
	//     return an error.
	//   - When inserting a new table entry, leaving these fields unset means that
	//     the direct resources of this table (if any) will assume default values.
	//     For counters, the default value is 0, and for meters, the default value
	//     is always green.
	//   - When updating a table entry, leaving meter_config unset will reset the
	//     meter (if any) to its default configuration, while leaving counter_data
	//     unset means that the counter (if any) will not be updated.
	// Table read:
	//   - If the table does not contain a direct resource, then the corresponding
	//     field will not be set in the read table entry.
	//   - If meter_config is unset in the request, or if the meter has a default
	//     configuration, meter_config will not be set in the response.
	//   - If counter_data is unset in the request, it will be unset in the
	//     response as well.
	MeterConfig *MeterConfig `protobuf:"bytes,6,opt,name=meter_config,json=meterConfig,proto3" json:"meter_config,omitempty"`
	CounterData *CounterData `protobuf:"bytes,7,opt,name=counter_data,json=counterData,proto3" json:"counter_data,omitempty"`
	// Set to true if the table entry is being used to update the non-const
	// default action of the table. If true, the "match" field must be empty and
	// the "action" field must be populated with a valid direct action.
	IsDefaultAction bool `protobuf:"varint,8,opt,name=is_default_action,json=isDefaultAction,proto3" json:"is_default_action,omitempty"`
	// The TTL for the entry, in nanoseconds. A value of 0 means that the table
	// entry never "expires".
	IdleTimeoutNs int64 `protobuf:"varint,9,opt,name=idle_timeout_ns,json=idleTimeoutNs,proto3" json:"idle_timeout_ns,omitempty"`
	// Table write: this field should be left unset.
	// Table read: if the table supports idle timeout and time_since_last_hit is
	// set in the request, this field will be set in the response.
	TimeSinceLastHit     *TableEntry_IdleTimeout `protobuf:"bytes,10,opt,name=time_since_last_hit,json=timeSinceLastHit,proto3" json:"time_since_last_hit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TableEntry) Reset()         { *m = TableEntry{} }
func (m *TableEntry) String() string { return proto.CompactTextString(m) }
func (*TableEntry) ProtoMessage()    {}
func (*TableEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{7}
}

func (m *TableEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableEntry.Unmarshal(m, b)
}
func (m *TableEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableEntry.Marshal(b, m, deterministic)
}
func (m *TableEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableEntry.Merge(m, src)
}
func (m *TableEntry) XXX_Size() int {
	return xxx_messageInfo_TableEntry.Size(m)
}
func (m *TableEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TableEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TableEntry proto.InternalMessageInfo

func (m *TableEntry) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *TableEntry) GetMatch() []*FieldMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *TableEntry) GetAction() *TableAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *TableEntry) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *TableEntry) GetControllerMetadata() uint64 {
	if m != nil {
		return m.ControllerMetadata
	}
	return 0
}

func (m *TableEntry) GetMeterConfig() *MeterConfig {
	if m != nil {
		return m.MeterConfig
	}
	return nil
}

func (m *TableEntry) GetCounterData() *CounterData {
	if m != nil {
		return m.CounterData
	}
	return nil
}

func (m *TableEntry) GetIsDefaultAction() bool {
	if m != nil {
		return m.IsDefaultAction
	}
	return false
}

func (m *TableEntry) GetIdleTimeoutNs() int64 {
	if m != nil {
		return m.IdleTimeoutNs
	}
	return 0
}

func (m *TableEntry) GetTimeSinceLastHit() *TableEntry_IdleTimeout {
	if m != nil {
		return m.TimeSinceLastHit
	}
	return nil
}

type TableEntry_IdleTimeout struct {
	// Time elapsed - in nanoseconds - since the table entry was last "hit" as
	// part of a data plane table lookup.
	ElapsedNs            int64    `protobuf:"varint,1,opt,name=elapsed_ns,json=elapsedNs,proto3" json:"elapsed_ns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableEntry_IdleTimeout) Reset()         { *m = TableEntry_IdleTimeout{} }
func (m *TableEntry_IdleTimeout) String() string { return proto.CompactTextString(m) }
func (*TableEntry_IdleTimeout) ProtoMessage()    {}
func (*TableEntry_IdleTimeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{7, 0}
}

func (m *TableEntry_IdleTimeout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableEntry_IdleTimeout.Unmarshal(m, b)
}
func (m *TableEntry_IdleTimeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableEntry_IdleTimeout.Marshal(b, m, deterministic)
}
func (m *TableEntry_IdleTimeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableEntry_IdleTimeout.Merge(m, src)
}
func (m *TableEntry_IdleTimeout) XXX_Size() int {
	return xxx_messageInfo_TableEntry_IdleTimeout.Size(m)
}
func (m *TableEntry_IdleTimeout) XXX_DiscardUnknown() {
	xxx_messageInfo_TableEntry_IdleTimeout.DiscardUnknown(m)
}

var xxx_messageInfo_TableEntry_IdleTimeout proto.InternalMessageInfo

func (m *TableEntry_IdleTimeout) GetElapsedNs() int64 {
	if m != nil {
		return m.ElapsedNs
	}
	return 0
}

// field_match_type ::= exact | ternary | lpm | range
type FieldMatch struct {
	FieldId uint32 `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	// Types that are valid to be assigned to FieldMatchType:
	//	*FieldMatch_Exact_
	//	*FieldMatch_Ternary_
	//	*FieldMatch_Lpm
	//	*FieldMatch_Range_
	//	*FieldMatch_Other
	FieldMatchType       isFieldMatch_FieldMatchType `protobuf_oneof:"field_match_type"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *FieldMatch) Reset()         { *m = FieldMatch{} }
func (m *FieldMatch) String() string { return proto.CompactTextString(m) }
func (*FieldMatch) ProtoMessage()    {}
func (*FieldMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{8}
}

func (m *FieldMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMatch.Unmarshal(m, b)
}
func (m *FieldMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMatch.Marshal(b, m, deterministic)
}
func (m *FieldMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMatch.Merge(m, src)
}
func (m *FieldMatch) XXX_Size() int {
	return xxx_messageInfo_FieldMatch.Size(m)
}
func (m *FieldMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMatch.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMatch proto.InternalMessageInfo

func (m *FieldMatch) GetFieldId() uint32 {
	if m != nil {
		return m.FieldId
	}
	return 0
}

type isFieldMatch_FieldMatchType interface {
	isFieldMatch_FieldMatchType()
}

type FieldMatch_Exact_ struct {
	Exact *FieldMatch_Exact `protobuf:"bytes,2,opt,name=exact,proto3,oneof"`
}

type FieldMatch_Ternary_ struct {
	Ternary *FieldMatch_Ternary `protobuf:"bytes,3,opt,name=ternary,proto3,oneof"`
}

type FieldMatch_Lpm struct {
	Lpm *FieldMatch_LPM `protobuf:"bytes,4,opt,name=lpm,proto3,oneof"`
}

type FieldMatch_Range_ struct {
	Range *FieldMatch_Range `protobuf:"bytes,6,opt,name=range,proto3,oneof"`
}

type FieldMatch_Other struct {
	Other *any.Any `protobuf:"bytes,100,opt,name=other,proto3,oneof"`
}

func (*FieldMatch_Exact_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Ternary_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Lpm) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Range_) isFieldMatch_FieldMatchType() {}

func (*FieldMatch_Other) isFieldMatch_FieldMatchType() {}

func (m *FieldMatch) GetFieldMatchType() isFieldMatch_FieldMatchType {
	if m != nil {
		return m.FieldMatchType
	}
	return nil
}

func (m *FieldMatch) GetExact() *FieldMatch_Exact {
	if x, ok := m.GetFieldMatchType().(*FieldMatch_Exact_); ok {
		return x.Exact
	}
	return nil
}

func (m *FieldMatch) GetTernary() *FieldMatch_Ternary {
	if x, ok := m.GetFieldMatchType().(*FieldMatch_Ternary_); ok {
		return x.Ternary
	}
	return nil
}

func (m *FieldMatch) GetLpm() *FieldMatch_LPM {
	if x, ok := m.GetFieldMatchType().(*FieldMatch_Lpm); ok {
		return x.Lpm
	}
	return nil
}

func (m *FieldMatch) GetRange() *FieldMatch_Range {
	if x, ok := m.GetFieldMatchType().(*FieldMatch_Range_); ok {
		return x.Range
	}
	return nil
}

func (m *FieldMatch) GetOther() *any.Any {
	if x, ok := m.GetFieldMatchType().(*FieldMatch_Other); ok {
		return x.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldMatch) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldMatch_Exact_)(nil),
		(*FieldMatch_Ternary_)(nil),
		(*FieldMatch_Lpm)(nil),
		(*FieldMatch_Range_)(nil),
		(*FieldMatch_Other)(nil),
	}
}

// Matches can be performed on arbitrarily-large inputs; the protobuf type
// 'bytes' is used to model arbitrarily-large values.
type FieldMatch_Exact struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldMatch_Exact) Reset()         { *m = FieldMatch_Exact{} }
func (m *FieldMatch_Exact) String() string { return proto.CompactTextString(m) }
func (*FieldMatch_Exact) ProtoMessage()    {}
func (*FieldMatch_Exact) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{8, 0}
}

func (m *FieldMatch_Exact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMatch_Exact.Unmarshal(m, b)
}
func (m *FieldMatch_Exact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMatch_Exact.Marshal(b, m, deterministic)
}
func (m *FieldMatch_Exact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMatch_Exact.Merge(m, src)
}
func (m *FieldMatch_Exact) XXX_Size() int {
	return xxx_messageInfo_FieldMatch_Exact.Size(m)
}
func (m *FieldMatch_Exact) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMatch_Exact.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMatch_Exact proto.InternalMessageInfo

func (m *FieldMatch_Exact) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type FieldMatch_Ternary struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Mask                 []byte   `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldMatch_Ternary) Reset()         { *m = FieldMatch_Ternary{} }
func (m *FieldMatch_Ternary) String() string { return proto.CompactTextString(m) }
func (*FieldMatch_Ternary) ProtoMessage()    {}
func (*FieldMatch_Ternary) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{8, 1}
}

func (m *FieldMatch_Ternary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMatch_Ternary.Unmarshal(m, b)
}
func (m *FieldMatch_Ternary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMatch_Ternary.Marshal(b, m, deterministic)
}
func (m *FieldMatch_Ternary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMatch_Ternary.Merge(m, src)
}
func (m *FieldMatch_Ternary) XXX_Size() int {
	return xxx_messageInfo_FieldMatch_Ternary.Size(m)
}
func (m *FieldMatch_Ternary) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMatch_Ternary.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMatch_Ternary proto.InternalMessageInfo

func (m *FieldMatch_Ternary) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldMatch_Ternary) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

type FieldMatch_LPM struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	PrefixLen            int32    `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldMatch_LPM) Reset()         { *m = FieldMatch_LPM{} }
func (m *FieldMatch_LPM) String() string { return proto.CompactTextString(m) }
func (*FieldMatch_LPM) ProtoMessage()    {}
func (*FieldMatch_LPM) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{8, 2}
}

func (m *FieldMatch_LPM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMatch_LPM.Unmarshal(m, b)
}
func (m *FieldMatch_LPM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMatch_LPM.Marshal(b, m, deterministic)
}
func (m *FieldMatch_LPM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMatch_LPM.Merge(m, src)
}
func (m *FieldMatch_LPM) XXX_Size() int {
	return xxx_messageInfo_FieldMatch_LPM.Size(m)
}
func (m *FieldMatch_LPM) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMatch_LPM.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMatch_LPM proto.InternalMessageInfo

func (m *FieldMatch_LPM) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldMatch_LPM) GetPrefixLen() int32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

// A Range is logically a set that contains all values numerically between
// 'low' and 'high' inclusively.
type FieldMatch_Range struct {
	Low                  []byte   `protobuf:"bytes,1,opt,name=low,proto3" json:"low,omitempty"`
	High                 []byte   `protobuf:"bytes,2,opt,name=high,proto3" json:"high,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldMatch_Range) Reset()         { *m = FieldMatch_Range{} }
func (m *FieldMatch_Range) String() string { return proto.CompactTextString(m) }
func (*FieldMatch_Range) ProtoMessage()    {}
func (*FieldMatch_Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{8, 3}
}

func (m *FieldMatch_Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldMatch_Range.Unmarshal(m, b)
}
func (m *FieldMatch_Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldMatch_Range.Marshal(b, m, deterministic)
}
func (m *FieldMatch_Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldMatch_Range.Merge(m, src)
}
func (m *FieldMatch_Range) XXX_Size() int {
	return xxx_messageInfo_FieldMatch_Range.Size(m)
}
func (m *FieldMatch_Range) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldMatch_Range.DiscardUnknown(m)
}

var xxx_messageInfo_FieldMatch_Range proto.InternalMessageInfo

func (m *FieldMatch_Range) GetLow() []byte {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *FieldMatch_Range) GetHigh() []byte {
	if m != nil {
		return m.High
	}
	return nil
}

// table_actions ::= action_specification | action_profile_specification
type TableAction struct {
	// Types that are valid to be assigned to Type:
	//	*TableAction_Action
	//	*TableAction_ActionProfileMemberId
	//	*TableAction_ActionProfileGroupId
	//	*TableAction_ActionProfileActionSet
	Type                 isTableAction_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TableAction) Reset()         { *m = TableAction{} }
func (m *TableAction) String() string { return proto.CompactTextString(m) }
func (*TableAction) ProtoMessage()    {}
func (*TableAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{9}
}

func (m *TableAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableAction.Unmarshal(m, b)
}
func (m *TableAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableAction.Marshal(b, m, deterministic)
}
func (m *TableAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableAction.Merge(m, src)
}
func (m *TableAction) XXX_Size() int {
	return xxx_messageInfo_TableAction.Size(m)
}
func (m *TableAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TableAction.DiscardUnknown(m)
}

var xxx_messageInfo_TableAction proto.InternalMessageInfo

type isTableAction_Type interface {
	isTableAction_Type()
}

type TableAction_Action struct {
	Action *Action `protobuf:"bytes,1,opt,name=action,proto3,oneof"`
}

type TableAction_ActionProfileMemberId struct {
	ActionProfileMemberId uint32 `protobuf:"varint,2,opt,name=action_profile_member_id,json=actionProfileMemberId,proto3,oneof"`
}

type TableAction_ActionProfileGroupId struct {
	ActionProfileGroupId uint32 `protobuf:"varint,3,opt,name=action_profile_group_id,json=actionProfileGroupId,proto3,oneof"`
}

type TableAction_ActionProfileActionSet struct {
	ActionProfileActionSet *ActionProfileActionSet `protobuf:"bytes,4,opt,name=action_profile_action_set,json=actionProfileActionSet,proto3,oneof"`
}

func (*TableAction_Action) isTableAction_Type() {}

func (*TableAction_ActionProfileMemberId) isTableAction_Type() {}

func (*TableAction_ActionProfileGroupId) isTableAction_Type() {}

func (*TableAction_ActionProfileActionSet) isTableAction_Type() {}

func (m *TableAction) GetType() isTableAction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TableAction) GetAction() *Action {
	if x, ok := m.GetType().(*TableAction_Action); ok {
		return x.Action
	}
	return nil
}

func (m *TableAction) GetActionProfileMemberId() uint32 {
	if x, ok := m.GetType().(*TableAction_ActionProfileMemberId); ok {
		return x.ActionProfileMemberId
	}
	return 0
}

func (m *TableAction) GetActionProfileGroupId() uint32 {
	if x, ok := m.GetType().(*TableAction_ActionProfileGroupId); ok {
		return x.ActionProfileGroupId
	}
	return 0
}

func (m *TableAction) GetActionProfileActionSet() *ActionProfileActionSet {
	if x, ok := m.GetType().(*TableAction_ActionProfileActionSet); ok {
		return x.ActionProfileActionSet
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TableAction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TableAction_Action)(nil),
		(*TableAction_ActionProfileMemberId)(nil),
		(*TableAction_ActionProfileGroupId)(nil),
		(*TableAction_ActionProfileActionSet)(nil),
	}
}

type Action struct {
	ActionId             uint32          `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Params               []*Action_Param `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{10}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetActionId() uint32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *Action) GetParams() []*Action_Param {
	if m != nil {
		return m.Params
	}
	return nil
}

type Action_Param struct {
	ParamId              uint32   `protobuf:"varint,2,opt,name=param_id,json=paramId,proto3" json:"param_id,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action_Param) Reset()         { *m = Action_Param{} }
func (m *Action_Param) String() string { return proto.CompactTextString(m) }
func (*Action_Param) ProtoMessage()    {}
func (*Action_Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{10, 0}
}

func (m *Action_Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action_Param.Unmarshal(m, b)
}
func (m *Action_Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action_Param.Marshal(b, m, deterministic)
}
func (m *Action_Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action_Param.Merge(m, src)
}
func (m *Action_Param) XXX_Size() int {
	return xxx_messageInfo_Action_Param.Size(m)
}
func (m *Action_Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Action_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Action_Param proto.InternalMessageInfo

func (m *Action_Param) GetParamId() uint32 {
	if m != nil {
		return m.ParamId
	}
	return 0
}

func (m *Action_Param) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ActionProfileActionSet struct {
	ActionProfileActions []*ActionProfileAction `protobuf:"bytes,1,rep,name=action_profile_actions,json=actionProfileActions,proto3" json:"action_profile_actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ActionProfileActionSet) Reset()         { *m = ActionProfileActionSet{} }
func (m *ActionProfileActionSet) String() string { return proto.CompactTextString(m) }
func (*ActionProfileActionSet) ProtoMessage()    {}
func (*ActionProfileActionSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{11}
}

func (m *ActionProfileActionSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfileActionSet.Unmarshal(m, b)
}
func (m *ActionProfileActionSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfileActionSet.Marshal(b, m, deterministic)
}
func (m *ActionProfileActionSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfileActionSet.Merge(m, src)
}
func (m *ActionProfileActionSet) XXX_Size() int {
	return xxx_messageInfo_ActionProfileActionSet.Size(m)
}
func (m *ActionProfileActionSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfileActionSet.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfileActionSet proto.InternalMessageInfo

func (m *ActionProfileActionSet) GetActionProfileActions() []*ActionProfileAction {
	if m != nil {
		return m.ActionProfileActions
	}
	return nil
}

type ActionProfileAction struct {
	Action               *Action  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Weight               int32    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Watch                int32    `protobuf:"varint,3,opt,name=watch,proto3" json:"watch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionProfileAction) Reset()         { *m = ActionProfileAction{} }
func (m *ActionProfileAction) String() string { return proto.CompactTextString(m) }
func (*ActionProfileAction) ProtoMessage()    {}
func (*ActionProfileAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{12}
}

func (m *ActionProfileAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfileAction.Unmarshal(m, b)
}
func (m *ActionProfileAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfileAction.Marshal(b, m, deterministic)
}
func (m *ActionProfileAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfileAction.Merge(m, src)
}
func (m *ActionProfileAction) XXX_Size() int {
	return xxx_messageInfo_ActionProfileAction.Size(m)
}
func (m *ActionProfileAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfileAction.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfileAction proto.InternalMessageInfo

func (m *ActionProfileAction) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ActionProfileAction) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ActionProfileAction) GetWatch() int32 {
	if m != nil {
		return m.Watch
	}
	return 0
}

//------------------------------------------------------------------------------
type ActionProfileMember struct {
	ActionProfileId      uint32   `protobuf:"varint,1,opt,name=action_profile_id,json=actionProfileId,proto3" json:"action_profile_id,omitempty"`
	MemberId             uint32   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Action               *Action  `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionProfileMember) Reset()         { *m = ActionProfileMember{} }
func (m *ActionProfileMember) String() string { return proto.CompactTextString(m) }
func (*ActionProfileMember) ProtoMessage()    {}
func (*ActionProfileMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{13}
}

func (m *ActionProfileMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfileMember.Unmarshal(m, b)
}
func (m *ActionProfileMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfileMember.Marshal(b, m, deterministic)
}
func (m *ActionProfileMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfileMember.Merge(m, src)
}
func (m *ActionProfileMember) XXX_Size() int {
	return xxx_messageInfo_ActionProfileMember.Size(m)
}
func (m *ActionProfileMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfileMember.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfileMember proto.InternalMessageInfo

func (m *ActionProfileMember) GetActionProfileId() uint32 {
	if m != nil {
		return m.ActionProfileId
	}
	return 0
}

func (m *ActionProfileMember) GetMemberId() uint32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ActionProfileMember) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

//------------------------------------------------------------------------------
type ActionProfileGroup struct {
	ActionProfileId uint32                       `protobuf:"varint,1,opt,name=action_profile_id,json=actionProfileId,proto3" json:"action_profile_id,omitempty"`
	GroupId         uint32                       `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Members         []*ActionProfileGroup_Member `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	// Max number of weighted member entries in this group. It cannot be modified
	// after a group has been created. It must not exceed the static
	// max_group_size included in P4Info. If the max size is not known at group
	// creation-time, the p4lib may leave this field unset (default value 0), in
	// which case the static max_group_size value will be used and the group will
	// be able to include up to max_group_size weighted member entries.
	MaxSize              int32    `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionProfileGroup) Reset()         { *m = ActionProfileGroup{} }
func (m *ActionProfileGroup) String() string { return proto.CompactTextString(m) }
func (*ActionProfileGroup) ProtoMessage()    {}
func (*ActionProfileGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{14}
}

func (m *ActionProfileGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfileGroup.Unmarshal(m, b)
}
func (m *ActionProfileGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfileGroup.Marshal(b, m, deterministic)
}
func (m *ActionProfileGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfileGroup.Merge(m, src)
}
func (m *ActionProfileGroup) XXX_Size() int {
	return xxx_messageInfo_ActionProfileGroup.Size(m)
}
func (m *ActionProfileGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfileGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfileGroup proto.InternalMessageInfo

func (m *ActionProfileGroup) GetActionProfileId() uint32 {
	if m != nil {
		return m.ActionProfileId
	}
	return 0
}

func (m *ActionProfileGroup) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ActionProfileGroup) GetMembers() []*ActionProfileGroup_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *ActionProfileGroup) GetMaxSize() int32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

type ActionProfileGroup_Member struct {
	MemberId             uint32   `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Weight               int32    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Watch                uint32   `protobuf:"varint,3,opt,name=watch,proto3" json:"watch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionProfileGroup_Member) Reset()         { *m = ActionProfileGroup_Member{} }
func (m *ActionProfileGroup_Member) String() string { return proto.CompactTextString(m) }
func (*ActionProfileGroup_Member) ProtoMessage()    {}
func (*ActionProfileGroup_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{14, 0}
}

func (m *ActionProfileGroup_Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProfileGroup_Member.Unmarshal(m, b)
}
func (m *ActionProfileGroup_Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProfileGroup_Member.Marshal(b, m, deterministic)
}
func (m *ActionProfileGroup_Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProfileGroup_Member.Merge(m, src)
}
func (m *ActionProfileGroup_Member) XXX_Size() int {
	return xxx_messageInfo_ActionProfileGroup_Member.Size(m)
}
func (m *ActionProfileGroup_Member) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProfileGroup_Member.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProfileGroup_Member proto.InternalMessageInfo

func (m *ActionProfileGroup_Member) GetMemberId() uint32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *ActionProfileGroup_Member) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ActionProfileGroup_Member) GetWatch() uint32 {
	if m != nil {
		return m.Watch
	}
	return 0
}

// An index as a protobuf message. In proto3, fields cannot be optional and
// there is no difference between an unset integer field and an integer field
// set to 0. This is inconvenient for reading from P4 array-like structures,
// such as indirect counters and meters. We need a way to do a wildcard read on
// these but we cannot use a default zero index value to do so, as zero is a
// valid index (first entry in the array). We therefore wrap the index in a
// message.
type Index struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}
func (*Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{15}
}

func (m *Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Index.Unmarshal(m, b)
}
func (m *Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Index.Marshal(b, m, deterministic)
}
func (m *Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Index.Merge(m, src)
}
func (m *Index) XXX_Size() int {
	return xxx_messageInfo_Index.Size(m)
}
func (m *Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Index proto.InternalMessageInfo

func (m *Index) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

//------------------------------------------------------------------------------
// For WriteRequest, Update.Type must be MODIFY.
// For ReadRequest, the scope is defined as follows:
// - All meter cells for all meters if meter_id = 0 (default).
// - All meter cells for given meter_id if index is unset (default).
type MeterEntry struct {
	MeterId              uint32       `protobuf:"varint,1,opt,name=meter_id,json=meterId,proto3" json:"meter_id,omitempty"`
	Index                *Index       `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Config               *MeterConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MeterEntry) Reset()         { *m = MeterEntry{} }
func (m *MeterEntry) String() string { return proto.CompactTextString(m) }
func (*MeterEntry) ProtoMessage()    {}
func (*MeterEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{16}
}

func (m *MeterEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeterEntry.Unmarshal(m, b)
}
func (m *MeterEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeterEntry.Marshal(b, m, deterministic)
}
func (m *MeterEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeterEntry.Merge(m, src)
}
func (m *MeterEntry) XXX_Size() int {
	return xxx_messageInfo_MeterEntry.Size(m)
}
func (m *MeterEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MeterEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MeterEntry proto.InternalMessageInfo

func (m *MeterEntry) GetMeterId() uint32 {
	if m != nil {
		return m.MeterId
	}
	return 0
}

func (m *MeterEntry) GetIndex() *Index {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *MeterEntry) GetConfig() *MeterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

//------------------------------------------------------------------------------
// For WriteRequest, Update.Type must be MODIFY. INSERT and DELETE on direct
// meters is not allowed and will return an error. The insertion/deletion
// should happen as part of INSERT/DELETE on the associated table-entry.
// For ReadRequest, the scope is defined as follows:
// - All meter cells for all tables if table_entry.table_id = 0.
// - All meter cells of a table if table_entry.table_id is present and
//   table_entry.match is empty.
type DirectMeterEntry struct {
	// The associated table entry. This field is required.
	// table_entry.action is ignored. Other fields specify the match.
	TableEntry           *TableEntry  `protobuf:"bytes,1,opt,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	Config               *MeterConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DirectMeterEntry) Reset()         { *m = DirectMeterEntry{} }
func (m *DirectMeterEntry) String() string { return proto.CompactTextString(m) }
func (*DirectMeterEntry) ProtoMessage()    {}
func (*DirectMeterEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{17}
}

func (m *DirectMeterEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectMeterEntry.Unmarshal(m, b)
}
func (m *DirectMeterEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectMeterEntry.Marshal(b, m, deterministic)
}
func (m *DirectMeterEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectMeterEntry.Merge(m, src)
}
func (m *DirectMeterEntry) XXX_Size() int {
	return xxx_messageInfo_DirectMeterEntry.Size(m)
}
func (m *DirectMeterEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectMeterEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DirectMeterEntry proto.InternalMessageInfo

func (m *DirectMeterEntry) GetTableEntry() *TableEntry {
	if m != nil {
		return m.TableEntry
	}
	return nil
}

func (m *DirectMeterEntry) GetConfig() *MeterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// Modeled as RFC 2698: A Two Rate Three Color Marker (trTCM)
// The trTCM meters a packet stream and marks its packets based on two rates,
// Peak Information Rate (PIR) and Committed Information Rate (CIR), and their
// associated burst sizes to be either green, yellow, or red.  A packet is
// marked red if it exceeds the PIR.  Otherwise it is marked either yellow or
// green depending on whether it exceeds or doesn't exceed the CIR.
type MeterConfig struct {
	// Committed information rate (units per sec)
	Cir int64 `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
	// Committed burst size
	Cburst int64 `protobuf:"varint,2,opt,name=cburst,proto3" json:"cburst,omitempty"`
	// Peak information rate (units per sec)
	Pir int64 `protobuf:"varint,3,opt,name=pir,proto3" json:"pir,omitempty"`
	// Peak burst size
	Pburst               int64    `protobuf:"varint,4,opt,name=pburst,proto3" json:"pburst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeterConfig) Reset()         { *m = MeterConfig{} }
func (m *MeterConfig) String() string { return proto.CompactTextString(m) }
func (*MeterConfig) ProtoMessage()    {}
func (*MeterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{18}
}

func (m *MeterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeterConfig.Unmarshal(m, b)
}
func (m *MeterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeterConfig.Marshal(b, m, deterministic)
}
func (m *MeterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeterConfig.Merge(m, src)
}
func (m *MeterConfig) XXX_Size() int {
	return xxx_messageInfo_MeterConfig.Size(m)
}
func (m *MeterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MeterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MeterConfig proto.InternalMessageInfo

func (m *MeterConfig) GetCir() int64 {
	if m != nil {
		return m.Cir
	}
	return 0
}

func (m *MeterConfig) GetCburst() int64 {
	if m != nil {
		return m.Cburst
	}
	return 0
}

func (m *MeterConfig) GetPir() int64 {
	if m != nil {
		return m.Pir
	}
	return 0
}

func (m *MeterConfig) GetPburst() int64 {
	if m != nil {
		return m.Pburst
	}
	return 0
}

//------------------------------------------------------------------------------
// For WriteRequest, Update.Type must be MODIFY.
// For ReadRequest, the scope is defined as follows:
// - All counter cells for all counters if counter_id = 0 (default).
// - All counter cells for given counter_id if index is unset (default).
type CounterEntry struct {
	CounterId            uint32       `protobuf:"varint,1,opt,name=counter_id,json=counterId,proto3" json:"counter_id,omitempty"`
	Index                *Index       `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Data                 *CounterData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CounterEntry) Reset()         { *m = CounterEntry{} }
func (m *CounterEntry) String() string { return proto.CompactTextString(m) }
func (*CounterEntry) ProtoMessage()    {}
func (*CounterEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{19}
}

func (m *CounterEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterEntry.Unmarshal(m, b)
}
func (m *CounterEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterEntry.Marshal(b, m, deterministic)
}
func (m *CounterEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterEntry.Merge(m, src)
}
func (m *CounterEntry) XXX_Size() int {
	return xxx_messageInfo_CounterEntry.Size(m)
}
func (m *CounterEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CounterEntry proto.InternalMessageInfo

func (m *CounterEntry) GetCounterId() uint32 {
	if m != nil {
		return m.CounterId
	}
	return 0
}

func (m *CounterEntry) GetIndex() *Index {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *CounterEntry) GetData() *CounterData {
	if m != nil {
		return m.Data
	}
	return nil
}

//------------------------------------------------------------------------------
// For WriteRequest, Update.Type must be MODIFY. INSERT and DELETE on direct
// counters is not allowed and will return an error. The insertion/deletion
// should happen as part of INSERT/DELETE on the associated table-entry.
// For ReadRequest, the scope is defined as follows:
// - All counter cells for all tables if table_entry.table_id = 0.
// - All counter cells of a table if table_entry.table_id is present and
//   table_entry.match is empty.
type DirectCounterEntry struct {
	// The associated table entry. This field is required.
	// table_entry.action is ignored. Other fields specify the match.
	TableEntry           *TableEntry  `protobuf:"bytes,1,opt,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	Data                 *CounterData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DirectCounterEntry) Reset()         { *m = DirectCounterEntry{} }
func (m *DirectCounterEntry) String() string { return proto.CompactTextString(m) }
func (*DirectCounterEntry) ProtoMessage()    {}
func (*DirectCounterEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{20}
}

func (m *DirectCounterEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectCounterEntry.Unmarshal(m, b)
}
func (m *DirectCounterEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectCounterEntry.Marshal(b, m, deterministic)
}
func (m *DirectCounterEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectCounterEntry.Merge(m, src)
}
func (m *DirectCounterEntry) XXX_Size() int {
	return xxx_messageInfo_DirectCounterEntry.Size(m)
}
func (m *DirectCounterEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectCounterEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DirectCounterEntry proto.InternalMessageInfo

func (m *DirectCounterEntry) GetTableEntry() *TableEntry {
	if m != nil {
		return m.TableEntry
	}
	return nil
}

func (m *DirectCounterEntry) GetData() *CounterData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CounterData struct {
	ByteCount            int64    `protobuf:"varint,1,opt,name=byte_count,json=byteCount,proto3" json:"byte_count,omitempty"`
	PacketCount          int64    `protobuf:"varint,2,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CounterData) Reset()         { *m = CounterData{} }
func (m *CounterData) String() string { return proto.CompactTextString(m) }
func (*CounterData) ProtoMessage()    {}
func (*CounterData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{21}
}

func (m *CounterData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterData.Unmarshal(m, b)
}
func (m *CounterData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterData.Marshal(b, m, deterministic)
}
func (m *CounterData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterData.Merge(m, src)
}
func (m *CounterData) XXX_Size() int {
	return xxx_messageInfo_CounterData.Size(m)
}
func (m *CounterData) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterData.DiscardUnknown(m)
}

var xxx_messageInfo_CounterData proto.InternalMessageInfo

func (m *CounterData) GetByteCount() int64 {
	if m != nil {
		return m.ByteCount
	}
	return 0
}

func (m *CounterData) GetPacketCount() int64 {
	if m != nil {
		return m.PacketCount
	}
	return 0
}

//------------------------------------------------------------------------------
// Only one instance of a Packet Replication Engine (PRE) is expected in the
// P4 pipeline. Hence, no instance id is needed to access the PRE.
type PacketReplicationEngineEntry struct {
	// Types that are valid to be assigned to Type:
	//	*PacketReplicationEngineEntry_MulticastGroupEntry
	//	*PacketReplicationEngineEntry_CloneSessionEntry
	Type                 isPacketReplicationEngineEntry_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *PacketReplicationEngineEntry) Reset()         { *m = PacketReplicationEngineEntry{} }
func (m *PacketReplicationEngineEntry) String() string { return proto.CompactTextString(m) }
func (*PacketReplicationEngineEntry) ProtoMessage()    {}
func (*PacketReplicationEngineEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{22}
}

func (m *PacketReplicationEngineEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketReplicationEngineEntry.Unmarshal(m, b)
}
func (m *PacketReplicationEngineEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketReplicationEngineEntry.Marshal(b, m, deterministic)
}
func (m *PacketReplicationEngineEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketReplicationEngineEntry.Merge(m, src)
}
func (m *PacketReplicationEngineEntry) XXX_Size() int {
	return xxx_messageInfo_PacketReplicationEngineEntry.Size(m)
}
func (m *PacketReplicationEngineEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketReplicationEngineEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PacketReplicationEngineEntry proto.InternalMessageInfo

type isPacketReplicationEngineEntry_Type interface {
	isPacketReplicationEngineEntry_Type()
}

type PacketReplicationEngineEntry_MulticastGroupEntry struct {
	MulticastGroupEntry *MulticastGroupEntry `protobuf:"bytes,1,opt,name=multicast_group_entry,json=multicastGroupEntry,proto3,oneof"`
}

type PacketReplicationEngineEntry_CloneSessionEntry struct {
	CloneSessionEntry *CloneSessionEntry `protobuf:"bytes,2,opt,name=clone_session_entry,json=cloneSessionEntry,proto3,oneof"`
}

func (*PacketReplicationEngineEntry_MulticastGroupEntry) isPacketReplicationEngineEntry_Type() {}

func (*PacketReplicationEngineEntry_CloneSessionEntry) isPacketReplicationEngineEntry_Type() {}

func (m *PacketReplicationEngineEntry) GetType() isPacketReplicationEngineEntry_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PacketReplicationEngineEntry) GetMulticastGroupEntry() *MulticastGroupEntry {
	if x, ok := m.GetType().(*PacketReplicationEngineEntry_MulticastGroupEntry); ok {
		return x.MulticastGroupEntry
	}
	return nil
}

func (m *PacketReplicationEngineEntry) GetCloneSessionEntry() *CloneSessionEntry {
	if x, ok := m.GetType().(*PacketReplicationEngineEntry_CloneSessionEntry); ok {
		return x.CloneSessionEntry
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PacketReplicationEngineEntry) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PacketReplicationEngineEntry_MulticastGroupEntry)(nil),
		(*PacketReplicationEngineEntry_CloneSessionEntry)(nil),
	}
}

// Used for replicas created for cloning and multicasting actions.
type Replica struct {
	EgressPort           uint32   `protobuf:"varint,1,opt,name=egress_port,json=egressPort,proto3" json:"egress_port,omitempty"`
	Instance             uint32   `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{23}
}

func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetEgressPort() uint32 {
	if m != nil {
		return m.EgressPort
	}
	return 0
}

func (m *Replica) GetInstance() uint32 {
	if m != nil {
		return m.Instance
	}
	return 0
}

// The (egress_port, instance) pair must be unique for each replica in a given
// multicast group entry. A packet may be multicast by setting the
// multicast_group field of PSA ingress output metadata to multicast_group_id
// of a programmed multicast group entry. The egress_port and instance fields of
// each replica's egress input metadata will be set to the respective values
// programmed in the multicast group entry.
type MulticastGroupEntry struct {
	MulticastGroupId     uint32     `protobuf:"varint,1,opt,name=multicast_group_id,json=multicastGroupId,proto3" json:"multicast_group_id,omitempty"`
	Replicas             []*Replica `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MulticastGroupEntry) Reset()         { *m = MulticastGroupEntry{} }
func (m *MulticastGroupEntry) String() string { return proto.CompactTextString(m) }
func (*MulticastGroupEntry) ProtoMessage()    {}
func (*MulticastGroupEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{24}
}

func (m *MulticastGroupEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MulticastGroupEntry.Unmarshal(m, b)
}
func (m *MulticastGroupEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MulticastGroupEntry.Marshal(b, m, deterministic)
}
func (m *MulticastGroupEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MulticastGroupEntry.Merge(m, src)
}
func (m *MulticastGroupEntry) XXX_Size() int {
	return xxx_messageInfo_MulticastGroupEntry.Size(m)
}
func (m *MulticastGroupEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MulticastGroupEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MulticastGroupEntry proto.InternalMessageInfo

func (m *MulticastGroupEntry) GetMulticastGroupId() uint32 {
	if m != nil {
		return m.MulticastGroupId
	}
	return 0
}

func (m *MulticastGroupEntry) GetReplicas() []*Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

// A packet may be cloned by setting the clone_session_id field of PSA
// ingress/egress output metadata to session_id of a programmed clone session
// entry. Multiple clones may be created via a single clone session entry by
// using the replicas message. The clones may be distinguished in the egress
// using the instance field. The class_of_service field of the clone's egress
// input metadata will be set to the respective value programmed in the clone
// session entry. Note that in case of multiple clones, all clones, defined
// for a clone session, will get the same class of service. The
// packet_length_bytes field must be set to a non-zero value if the clone
// packet(s) should be truncated to the given value (in bytes). The packet
// length is also common to all clones in the clone session. If the
// packet_length_bytes field is 0, no truncation on the clone(s) will be
// performed.
type CloneSessionEntry struct {
	SessionId            uint32     `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Replicas             []*Replica `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`
	ClassOfService       uint32     `protobuf:"varint,3,opt,name=class_of_service,json=classOfService,proto3" json:"class_of_service,omitempty"`
	PacketLengthBytes    int32      `protobuf:"varint,4,opt,name=packet_length_bytes,json=packetLengthBytes,proto3" json:"packet_length_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CloneSessionEntry) Reset()         { *m = CloneSessionEntry{} }
func (m *CloneSessionEntry) String() string { return proto.CompactTextString(m) }
func (*CloneSessionEntry) ProtoMessage()    {}
func (*CloneSessionEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{25}
}

func (m *CloneSessionEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneSessionEntry.Unmarshal(m, b)
}
func (m *CloneSessionEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneSessionEntry.Marshal(b, m, deterministic)
}
func (m *CloneSessionEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneSessionEntry.Merge(m, src)
}
func (m *CloneSessionEntry) XXX_Size() int {
	return xxx_messageInfo_CloneSessionEntry.Size(m)
}
func (m *CloneSessionEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneSessionEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CloneSessionEntry proto.InternalMessageInfo

func (m *CloneSessionEntry) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *CloneSessionEntry) GetReplicas() []*Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *CloneSessionEntry) GetClassOfService() uint32 {
	if m != nil {
		return m.ClassOfService
	}
	return 0
}

func (m *CloneSessionEntry) GetPacketLengthBytes() int32 {
	if m != nil {
		return m.PacketLengthBytes
	}
	return 0
}

// A member in a P4 value set. Each member defines a list of matches, which can
// have different match types.
type ValueSetMember struct {
	Match                []*FieldMatch `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ValueSetMember) Reset()         { *m = ValueSetMember{} }
func (m *ValueSetMember) String() string { return proto.CompactTextString(m) }
func (*ValueSetMember) ProtoMessage()    {}
func (*ValueSetMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{26}
}

func (m *ValueSetMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSetMember.Unmarshal(m, b)
}
func (m *ValueSetMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSetMember.Marshal(b, m, deterministic)
}
func (m *ValueSetMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSetMember.Merge(m, src)
}
func (m *ValueSetMember) XXX_Size() int {
	return xxx_messageInfo_ValueSetMember.Size(m)
}
func (m *ValueSetMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSetMember.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSetMember proto.InternalMessageInfo

func (m *ValueSetMember) GetMatch() []*FieldMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

//------------------------------------------------------------------------------
// For writing and reading matches in a parser value set. A state transition
// on an empty value set will never be taken. The number of matches must be at
// most the size of the value set as specified by the size argument of the
// value_set constructor in the P4 program.
//
// For Write Requests:
//   - MODIFY will write the given matches in the repeated field to the value
//     set.
//   - INSERT and DELETE are not allowed.
//
// For Read Requests:
//   - All matches for all value-set entries if value_set_id = 0
//   - All matches of the value-set if a valid value_set_id is specified
//   - The 'match' field must never be set in the ReadRequest
type ValueSetEntry struct {
	ValueSetId           uint32            `protobuf:"varint,1,opt,name=value_set_id,json=valueSetId,proto3" json:"value_set_id,omitempty"`
	Members              []*ValueSetMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValueSetEntry) Reset()         { *m = ValueSetEntry{} }
func (m *ValueSetEntry) String() string { return proto.CompactTextString(m) }
func (*ValueSetEntry) ProtoMessage()    {}
func (*ValueSetEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{27}
}

func (m *ValueSetEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSetEntry.Unmarshal(m, b)
}
func (m *ValueSetEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSetEntry.Marshal(b, m, deterministic)
}
func (m *ValueSetEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSetEntry.Merge(m, src)
}
func (m *ValueSetEntry) XXX_Size() int {
	return xxx_messageInfo_ValueSetEntry.Size(m)
}
func (m *ValueSetEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSetEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSetEntry proto.InternalMessageInfo

func (m *ValueSetEntry) GetValueSetId() uint32 {
	if m != nil {
		return m.ValueSetId
	}
	return 0
}

func (m *ValueSetEntry) GetMembers() []*ValueSetMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type RegisterEntry struct {
	RegisterId           uint32   `protobuf:"varint,1,opt,name=register_id,json=registerId,proto3" json:"register_id,omitempty"`
	Index                *Index   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Data                 *P4Data  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterEntry) Reset()         { *m = RegisterEntry{} }
func (m *RegisterEntry) String() string { return proto.CompactTextString(m) }
func (*RegisterEntry) ProtoMessage()    {}
func (*RegisterEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{28}
}

func (m *RegisterEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterEntry.Unmarshal(m, b)
}
func (m *RegisterEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterEntry.Marshal(b, m, deterministic)
}
func (m *RegisterEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterEntry.Merge(m, src)
}
func (m *RegisterEntry) XXX_Size() int {
	return xxx_messageInfo_RegisterEntry.Size(m)
}
func (m *RegisterEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterEntry.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterEntry proto.InternalMessageInfo

func (m *RegisterEntry) GetRegisterId() uint32 {
	if m != nil {
		return m.RegisterId
	}
	return 0
}

func (m *RegisterEntry) GetIndex() *Index {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *RegisterEntry) GetData() *P4Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// Used to configure the digest extern only, not to stream digests or acks
type DigestEntry struct {
	DigestId             uint32              `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	Config               *DigestEntry_Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DigestEntry) Reset()         { *m = DigestEntry{} }
func (m *DigestEntry) String() string { return proto.CompactTextString(m) }
func (*DigestEntry) ProtoMessage()    {}
func (*DigestEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{29}
}

func (m *DigestEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DigestEntry.Unmarshal(m, b)
}
func (m *DigestEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DigestEntry.Marshal(b, m, deterministic)
}
func (m *DigestEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DigestEntry.Merge(m, src)
}
func (m *DigestEntry) XXX_Size() int {
	return xxx_messageInfo_DigestEntry.Size(m)
}
func (m *DigestEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DigestEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DigestEntry proto.InternalMessageInfo

func (m *DigestEntry) GetDigestId() uint32 {
	if m != nil {
		return m.DigestId
	}
	return 0
}

func (m *DigestEntry) GetConfig() *DigestEntry_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// a DigestList message is streamed when the following conditions are met:
//   - there is at least one digest ready
//   - the oldest digest in the list has been waiting for at least
//     max_timeout_ns nanoseconds or we have gathered max_list_size digests
//     already
type DigestEntry_Config struct {
	MaxTimeoutNs         int64    `protobuf:"varint,1,opt,name=max_timeout_ns,json=maxTimeoutNs,proto3" json:"max_timeout_ns,omitempty"`
	MaxListSize          int32    `protobuf:"varint,2,opt,name=max_list_size,json=maxListSize,proto3" json:"max_list_size,omitempty"`
	AckTimeoutNs         int64    `protobuf:"varint,3,opt,name=ack_timeout_ns,json=ackTimeoutNs,proto3" json:"ack_timeout_ns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DigestEntry_Config) Reset()         { *m = DigestEntry_Config{} }
func (m *DigestEntry_Config) String() string { return proto.CompactTextString(m) }
func (*DigestEntry_Config) ProtoMessage()    {}
func (*DigestEntry_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{29, 0}
}

func (m *DigestEntry_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DigestEntry_Config.Unmarshal(m, b)
}
func (m *DigestEntry_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DigestEntry_Config.Marshal(b, m, deterministic)
}
func (m *DigestEntry_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DigestEntry_Config.Merge(m, src)
}
func (m *DigestEntry_Config) XXX_Size() int {
	return xxx_messageInfo_DigestEntry_Config.Size(m)
}
func (m *DigestEntry_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_DigestEntry_Config.DiscardUnknown(m)
}

var xxx_messageInfo_DigestEntry_Config proto.InternalMessageInfo

func (m *DigestEntry_Config) GetMaxTimeoutNs() int64 {
	if m != nil {
		return m.MaxTimeoutNs
	}
	return 0
}

func (m *DigestEntry_Config) GetMaxListSize() int32 {
	if m != nil {
		return m.MaxListSize
	}
	return 0
}

func (m *DigestEntry_Config) GetAckTimeoutNs() int64 {
	if m != nil {
		return m.AckTimeoutNs
	}
	return 0
}

//------------------------------------------------------------------------------
type StreamMessageRequest struct {
	// Types that are valid to be assigned to Update:
	//	*StreamMessageRequest_Arbitration
	//	*StreamMessageRequest_Packet
	//	*StreamMessageRequest_DigestAck
	//	*StreamMessageRequest_Other
	Update               isStreamMessageRequest_Update `protobuf_oneof:"update"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *StreamMessageRequest) Reset()         { *m = StreamMessageRequest{} }
func (m *StreamMessageRequest) String() string { return proto.CompactTextString(m) }
func (*StreamMessageRequest) ProtoMessage()    {}
func (*StreamMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{30}
}

func (m *StreamMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamMessageRequest.Unmarshal(m, b)
}
func (m *StreamMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamMessageRequest.Marshal(b, m, deterministic)
}
func (m *StreamMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamMessageRequest.Merge(m, src)
}
func (m *StreamMessageRequest) XXX_Size() int {
	return xxx_messageInfo_StreamMessageRequest.Size(m)
}
func (m *StreamMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamMessageRequest proto.InternalMessageInfo

type isStreamMessageRequest_Update interface {
	isStreamMessageRequest_Update()
}

type StreamMessageRequest_Arbitration struct {
	Arbitration *MasterArbitrationUpdate `protobuf:"bytes,1,opt,name=arbitration,proto3,oneof"`
}

type StreamMessageRequest_Packet struct {
	Packet *PacketOut `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type StreamMessageRequest_DigestAck struct {
	DigestAck *DigestListAck `protobuf:"bytes,3,opt,name=digest_ack,json=digestAck,proto3,oneof"`
}

type StreamMessageRequest_Other struct {
	Other *any.Any `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*StreamMessageRequest_Arbitration) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_Packet) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_DigestAck) isStreamMessageRequest_Update() {}

func (*StreamMessageRequest_Other) isStreamMessageRequest_Update() {}

func (m *StreamMessageRequest) GetUpdate() isStreamMessageRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *StreamMessageRequest) GetArbitration() *MasterArbitrationUpdate {
	if x, ok := m.GetUpdate().(*StreamMessageRequest_Arbitration); ok {
		return x.Arbitration
	}
	return nil
}

func (m *StreamMessageRequest) GetPacket() *PacketOut {
	if x, ok := m.GetUpdate().(*StreamMessageRequest_Packet); ok {
		return x.Packet
	}
	return nil
}

func (m *StreamMessageRequest) GetDigestAck() *DigestListAck {
	if x, ok := m.GetUpdate().(*StreamMessageRequest_DigestAck); ok {
		return x.DigestAck
	}
	return nil
}

func (m *StreamMessageRequest) GetOther() *any.Any {
	if x, ok := m.GetUpdate().(*StreamMessageRequest_Other); ok {
		return x.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamMessageRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamMessageRequest_Arbitration)(nil),
		(*StreamMessageRequest_Packet)(nil),
		(*StreamMessageRequest_DigestAck)(nil),
		(*StreamMessageRequest_Other)(nil),
	}
}

// Packet sent from the controller to the switch.
type PacketOut struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// This will be based on P4 header annotated as
	// @controller_header("packet_out").
	// At most one P4 header can have this annotation.
	Metadata             []*PacketMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PacketOut) Reset()         { *m = PacketOut{} }
func (m *PacketOut) String() string { return proto.CompactTextString(m) }
func (*PacketOut) ProtoMessage()    {}
func (*PacketOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{31}
}

func (m *PacketOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketOut.Unmarshal(m, b)
}
func (m *PacketOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketOut.Marshal(b, m, deterministic)
}
func (m *PacketOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketOut.Merge(m, src)
}
func (m *PacketOut) XXX_Size() int {
	return xxx_messageInfo_PacketOut.Size(m)
}
func (m *PacketOut) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketOut.DiscardUnknown(m)
}

var xxx_messageInfo_PacketOut proto.InternalMessageInfo

func (m *PacketOut) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PacketOut) GetMetadata() []*PacketMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Used by the controller to ack a DigestList message. To avoid flooding the
// controller, the switch must not generate digest notifications for the same
// data until a DigestListAck message with the same list_id is received or the
// ack timeout (ack_timeout_ns field in DigestEntry.Config) expires.
type DigestListAck struct {
	DigestId             uint32   `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	ListId               uint64   `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DigestListAck) Reset()         { *m = DigestListAck{} }
func (m *DigestListAck) String() string { return proto.CompactTextString(m) }
func (*DigestListAck) ProtoMessage()    {}
func (*DigestListAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{32}
}

func (m *DigestListAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DigestListAck.Unmarshal(m, b)
}
func (m *DigestListAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DigestListAck.Marshal(b, m, deterministic)
}
func (m *DigestListAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DigestListAck.Merge(m, src)
}
func (m *DigestListAck) XXX_Size() int {
	return xxx_messageInfo_DigestListAck.Size(m)
}
func (m *DigestListAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DigestListAck.DiscardUnknown(m)
}

var xxx_messageInfo_DigestListAck proto.InternalMessageInfo

func (m *DigestListAck) GetDigestId() uint32 {
	if m != nil {
		return m.DigestId
	}
	return 0
}

func (m *DigestListAck) GetListId() uint64 {
	if m != nil {
		return m.ListId
	}
	return 0
}

type StreamMessageResponse struct {
	// Types that are valid to be assigned to Update:
	//	*StreamMessageResponse_Arbitration
	//	*StreamMessageResponse_Packet
	//	*StreamMessageResponse_Digest
	//	*StreamMessageResponse_IdleTimeoutNotification
	//	*StreamMessageResponse_Other
	Update               isStreamMessageResponse_Update `protobuf_oneof:"update"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StreamMessageResponse) Reset()         { *m = StreamMessageResponse{} }
func (m *StreamMessageResponse) String() string { return proto.CompactTextString(m) }
func (*StreamMessageResponse) ProtoMessage()    {}
func (*StreamMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{33}
}

func (m *StreamMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamMessageResponse.Unmarshal(m, b)
}
func (m *StreamMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamMessageResponse.Marshal(b, m, deterministic)
}
func (m *StreamMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamMessageResponse.Merge(m, src)
}
func (m *StreamMessageResponse) XXX_Size() int {
	return xxx_messageInfo_StreamMessageResponse.Size(m)
}
func (m *StreamMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamMessageResponse proto.InternalMessageInfo

type isStreamMessageResponse_Update interface {
	isStreamMessageResponse_Update()
}

type StreamMessageResponse_Arbitration struct {
	Arbitration *MasterArbitrationUpdate `protobuf:"bytes,1,opt,name=arbitration,proto3,oneof"`
}

type StreamMessageResponse_Packet struct {
	Packet *PacketIn `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

type StreamMessageResponse_Digest struct {
	Digest *DigestList `protobuf:"bytes,3,opt,name=digest,proto3,oneof"`
}

type StreamMessageResponse_IdleTimeoutNotification struct {
	IdleTimeoutNotification *IdleTimeoutNotification `protobuf:"bytes,4,opt,name=idle_timeout_notification,json=idleTimeoutNotification,proto3,oneof"`
}

type StreamMessageResponse_Other struct {
	Other *any.Any `protobuf:"bytes,5,opt,name=other,proto3,oneof"`
}

func (*StreamMessageResponse_Arbitration) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Packet) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Digest) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_IdleTimeoutNotification) isStreamMessageResponse_Update() {}

func (*StreamMessageResponse_Other) isStreamMessageResponse_Update() {}

func (m *StreamMessageResponse) GetUpdate() isStreamMessageResponse_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *StreamMessageResponse) GetArbitration() *MasterArbitrationUpdate {
	if x, ok := m.GetUpdate().(*StreamMessageResponse_Arbitration); ok {
		return x.Arbitration
	}
	return nil
}

func (m *StreamMessageResponse) GetPacket() *PacketIn {
	if x, ok := m.GetUpdate().(*StreamMessageResponse_Packet); ok {
		return x.Packet
	}
	return nil
}

func (m *StreamMessageResponse) GetDigest() *DigestList {
	if x, ok := m.GetUpdate().(*StreamMessageResponse_Digest); ok {
		return x.Digest
	}
	return nil
}

func (m *StreamMessageResponse) GetIdleTimeoutNotification() *IdleTimeoutNotification {
	if x, ok := m.GetUpdate().(*StreamMessageResponse_IdleTimeoutNotification); ok {
		return x.IdleTimeoutNotification
	}
	return nil
}

func (m *StreamMessageResponse) GetOther() *any.Any {
	if x, ok := m.GetUpdate().(*StreamMessageResponse_Other); ok {
		return x.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamMessageResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamMessageResponse_Arbitration)(nil),
		(*StreamMessageResponse_Packet)(nil),
		(*StreamMessageResponse_Digest)(nil),
		(*StreamMessageResponse_IdleTimeoutNotification)(nil),
		(*StreamMessageResponse_Other)(nil),
	}
}

// Packet sent from the switch to the controller.
type PacketIn struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// This will be based on P4 header annotated as
	// @controller_header("packet_in").
	// At most one P4 header can have this annotation.
	Metadata             []*PacketMetadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PacketIn) Reset()         { *m = PacketIn{} }
func (m *PacketIn) String() string { return proto.CompactTextString(m) }
func (*PacketIn) ProtoMessage()    {}
func (*PacketIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{34}
}

func (m *PacketIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketIn.Unmarshal(m, b)
}
func (m *PacketIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketIn.Marshal(b, m, deterministic)
}
func (m *PacketIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketIn.Merge(m, src)
}
func (m *PacketIn) XXX_Size() int {
	return xxx_messageInfo_PacketIn.Size(m)
}
func (m *PacketIn) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketIn.DiscardUnknown(m)
}

var xxx_messageInfo_PacketIn proto.InternalMessageInfo

func (m *PacketIn) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PacketIn) GetMetadata() []*PacketMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DigestList struct {
	DigestId uint32 `protobuf:"varint,1,opt,name=digest_id,json=digestId,proto3" json:"digest_id,omitempty"`
	ListId   uint64 `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	// List of entries: each call to the Digest<T>::pack() method corresponds to
	// one entry and we can have as little as one entry.
	Data []*P4Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	// Timestamp at which the server generated the message (in nanoseconds since
	// Epoch)
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DigestList) Reset()         { *m = DigestList{} }
func (m *DigestList) String() string { return proto.CompactTextString(m) }
func (*DigestList) ProtoMessage()    {}
func (*DigestList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{35}
}

func (m *DigestList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DigestList.Unmarshal(m, b)
}
func (m *DigestList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DigestList.Marshal(b, m, deterministic)
}
func (m *DigestList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DigestList.Merge(m, src)
}
func (m *DigestList) XXX_Size() int {
	return xxx_messageInfo_DigestList.Size(m)
}
func (m *DigestList) XXX_DiscardUnknown() {
	xxx_messageInfo_DigestList.DiscardUnknown(m)
}

var xxx_messageInfo_DigestList proto.InternalMessageInfo

func (m *DigestList) GetDigestId() uint32 {
	if m != nil {
		return m.DigestId
	}
	return 0
}

func (m *DigestList) GetListId() uint64 {
	if m != nil {
		return m.ListId
	}
	return 0
}

func (m *DigestList) GetData() []*P4Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DigestList) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// Any metadata associated with Packet-IO (controller Packet-In or Packet-Out)
// needs to be modeled as P4 headers carrying special annotations
// @controller_header("packet_out") and @controller_header("packet_in")
// respectively. There can be at most one header each with these annotations.
// These special headers are captured in P4Info ControllerPacketMetadata.
type PacketMetadata struct {
	// This refers to Metadata.id coming from P4Info ControllerPacketMetadata.
	MetadataId           uint32   `protobuf:"varint,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PacketMetadata) Reset()         { *m = PacketMetadata{} }
func (m *PacketMetadata) String() string { return proto.CompactTextString(m) }
func (*PacketMetadata) ProtoMessage()    {}
func (*PacketMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{36}
}

func (m *PacketMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketMetadata.Unmarshal(m, b)
}
func (m *PacketMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketMetadata.Marshal(b, m, deterministic)
}
func (m *PacketMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketMetadata.Merge(m, src)
}
func (m *PacketMetadata) XXX_Size() int {
	return xxx_messageInfo_PacketMetadata.Size(m)
}
func (m *PacketMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_PacketMetadata proto.InternalMessageInfo

func (m *PacketMetadata) GetMetadataId() uint32 {
	if m != nil {
		return m.MetadataId
	}
	return 0
}

func (m *PacketMetadata) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type MasterArbitrationUpdate struct {
	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The role for which the mastership is being arbitrated. For use-cases where
	// where multiple roles are not needed, the controller can leave this unset,
	// implying default role and full pipeline access.
	Role *Role `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// The stream RPC with the highest election_id is the master. The 'master'
	// controller instance populates this with its latest election_id. Switch
	// populates with the highest election ID it has received from all connected
	// controllers.
	ElectionId *Uint128 `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	// Switch populates this with OK for the p4lib that is the master, and with
	// an error status for all other connected clients (at every mastership
	// change). The controller does not populate this field.
	Status               *status.Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MasterArbitrationUpdate) Reset()         { *m = MasterArbitrationUpdate{} }
func (m *MasterArbitrationUpdate) String() string { return proto.CompactTextString(m) }
func (*MasterArbitrationUpdate) ProtoMessage()    {}
func (*MasterArbitrationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{37}
}

func (m *MasterArbitrationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterArbitrationUpdate.Unmarshal(m, b)
}
func (m *MasterArbitrationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterArbitrationUpdate.Marshal(b, m, deterministic)
}
func (m *MasterArbitrationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterArbitrationUpdate.Merge(m, src)
}
func (m *MasterArbitrationUpdate) XXX_Size() int {
	return xxx_messageInfo_MasterArbitrationUpdate.Size(m)
}
func (m *MasterArbitrationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterArbitrationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MasterArbitrationUpdate proto.InternalMessageInfo

func (m *MasterArbitrationUpdate) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *MasterArbitrationUpdate) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *MasterArbitrationUpdate) GetElectionId() *Uint128 {
	if m != nil {
		return m.ElectionId
	}
	return nil
}

func (m *MasterArbitrationUpdate) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Role struct {
	// Uniquely identifies this role.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Describes the role configuration, i.e. what operations, P4 entities,
	// behaviors, etc. are in the scope of a given role. If config is not set
	// (default case), it implies all P4 objects and control behaviors are in
	// scope, i.e. full pipeline access. The format of this message is
	// out-of-scope of P4Runtime.
	Config               *any.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{38}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetConfig() *any.Any {
	if m != nil {
		return m.Config
	}
	return nil
}

type IdleTimeoutNotification struct {
	// The only fields that are required to be set in each TableEntry are the
	// "key" fields (table_id, match and priority) along with controller_metadata
	// and idle_timeout_ns.
	TableEntry []*TableEntry `protobuf:"bytes,1,rep,name=table_entry,json=tableEntry,proto3" json:"table_entry,omitempty"`
	// Timestamp at which the server generated the message (in nanoseconds since
	// Epoch)
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdleTimeoutNotification) Reset()         { *m = IdleTimeoutNotification{} }
func (m *IdleTimeoutNotification) String() string { return proto.CompactTextString(m) }
func (*IdleTimeoutNotification) ProtoMessage()    {}
func (*IdleTimeoutNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{39}
}

func (m *IdleTimeoutNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdleTimeoutNotification.Unmarshal(m, b)
}
func (m *IdleTimeoutNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdleTimeoutNotification.Marshal(b, m, deterministic)
}
func (m *IdleTimeoutNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdleTimeoutNotification.Merge(m, src)
}
func (m *IdleTimeoutNotification) XXX_Size() int {
	return xxx_messageInfo_IdleTimeoutNotification.Size(m)
}
func (m *IdleTimeoutNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_IdleTimeoutNotification.DiscardUnknown(m)
}

var xxx_messageInfo_IdleTimeoutNotification proto.InternalMessageInfo

func (m *IdleTimeoutNotification) GetTableEntry() []*TableEntry {
	if m != nil {
		return m.TableEntry
	}
	return nil
}

func (m *IdleTimeoutNotification) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Uint128 struct {
	// Highest 64 bits of a 128 bit number.
	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	// Lowest 64 bits of a 128 bit number.
	Low                  uint64   `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uint128) Reset()         { *m = Uint128{} }
func (m *Uint128) String() string { return proto.CompactTextString(m) }
func (*Uint128) ProtoMessage()    {}
func (*Uint128) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{40}
}

func (m *Uint128) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uint128.Unmarshal(m, b)
}
func (m *Uint128) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uint128.Marshal(b, m, deterministic)
}
func (m *Uint128) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uint128.Merge(m, src)
}
func (m *Uint128) XXX_Size() int {
	return xxx_messageInfo_Uint128.Size(m)
}
func (m *Uint128) XXX_DiscardUnknown() {
	xxx_messageInfo_Uint128.DiscardUnknown(m)
}

var xxx_messageInfo_Uint128 proto.InternalMessageInfo

func (m *Uint128) GetHigh() uint64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Uint128) GetLow() uint64 {
	if m != nil {
		return m.Low
	}
	return 0
}

//------------------------------------------------------------------------------
type SetForwardingPipelineConfigRequest struct {
	DeviceId             uint64                                    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	RoleId               uint64                                    `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ElectionId           *Uint128                                  `protobuf:"bytes,3,opt,name=election_id,json=electionId,proto3" json:"election_id,omitempty"`
	Action               SetForwardingPipelineConfigRequest_Action `protobuf:"varint,4,opt,name=action,proto3,enum=p4.v1.SetForwardingPipelineConfigRequest_Action" json:"action,omitempty"`
	Config               *ForwardingPipelineConfig                 `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *SetForwardingPipelineConfigRequest) Reset()         { *m = SetForwardingPipelineConfigRequest{} }
func (m *SetForwardingPipelineConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetForwardingPipelineConfigRequest) ProtoMessage()    {}
func (*SetForwardingPipelineConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{41}
}

func (m *SetForwardingPipelineConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetForwardingPipelineConfigRequest.Unmarshal(m, b)
}
func (m *SetForwardingPipelineConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetForwardingPipelineConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetForwardingPipelineConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetForwardingPipelineConfigRequest.Merge(m, src)
}
func (m *SetForwardingPipelineConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetForwardingPipelineConfigRequest.Size(m)
}
func (m *SetForwardingPipelineConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetForwardingPipelineConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetForwardingPipelineConfigRequest proto.InternalMessageInfo

func (m *SetForwardingPipelineConfigRequest) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *SetForwardingPipelineConfigRequest) GetRoleId() uint64 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *SetForwardingPipelineConfigRequest) GetElectionId() *Uint128 {
	if m != nil {
		return m.ElectionId
	}
	return nil
}

func (m *SetForwardingPipelineConfigRequest) GetAction() SetForwardingPipelineConfigRequest_Action {
	if m != nil {
		return m.Action
	}
	return SetForwardingPipelineConfigRequest_UNSPECIFIED
}

func (m *SetForwardingPipelineConfigRequest) GetConfig() *ForwardingPipelineConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetForwardingPipelineConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetForwardingPipelineConfigResponse) Reset()         { *m = SetForwardingPipelineConfigResponse{} }
func (m *SetForwardingPipelineConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetForwardingPipelineConfigResponse) ProtoMessage()    {}
func (*SetForwardingPipelineConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{42}
}

func (m *SetForwardingPipelineConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetForwardingPipelineConfigResponse.Unmarshal(m, b)
}
func (m *SetForwardingPipelineConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetForwardingPipelineConfigResponse.Marshal(b, m, deterministic)
}
func (m *SetForwardingPipelineConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetForwardingPipelineConfigResponse.Merge(m, src)
}
func (m *SetForwardingPipelineConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetForwardingPipelineConfigResponse.Size(m)
}
func (m *SetForwardingPipelineConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetForwardingPipelineConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetForwardingPipelineConfigResponse proto.InternalMessageInfo

type ForwardingPipelineConfig struct {
	P4Info *v1.P4Info `protobuf:"bytes,1,opt,name=p4info,proto3" json:"p4info,omitempty"`
	// Target-specific P4 configuration.
	P4DeviceConfig       []byte                           `protobuf:"bytes,2,opt,name=p4_device_config,json=p4DeviceConfig,proto3" json:"p4_device_config,omitempty"`
	Cookie               *ForwardingPipelineConfig_Cookie `protobuf:"bytes,3,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ForwardingPipelineConfig) Reset()         { *m = ForwardingPipelineConfig{} }
func (m *ForwardingPipelineConfig) String() string { return proto.CompactTextString(m) }
func (*ForwardingPipelineConfig) ProtoMessage()    {}
func (*ForwardingPipelineConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{43}
}

func (m *ForwardingPipelineConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingPipelineConfig.Unmarshal(m, b)
}
func (m *ForwardingPipelineConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingPipelineConfig.Marshal(b, m, deterministic)
}
func (m *ForwardingPipelineConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingPipelineConfig.Merge(m, src)
}
func (m *ForwardingPipelineConfig) XXX_Size() int {
	return xxx_messageInfo_ForwardingPipelineConfig.Size(m)
}
func (m *ForwardingPipelineConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingPipelineConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingPipelineConfig proto.InternalMessageInfo

func (m *ForwardingPipelineConfig) GetP4Info() *v1.P4Info {
	if m != nil {
		return m.P4Info
	}
	return nil
}

func (m *ForwardingPipelineConfig) GetP4DeviceConfig() []byte {
	if m != nil {
		return m.P4DeviceConfig
	}
	return nil
}

func (m *ForwardingPipelineConfig) GetCookie() *ForwardingPipelineConfig_Cookie {
	if m != nil {
		return m.Cookie
	}
	return nil
}

// Metadata (cookie) opaque to the target. A control plane may use this field
// to uniquely identify this config. There are no restrictions on how such
// value is computed, or where this is stored on the target, as long as it is
// returned with a GetForwardingPipelineConfig RPC. When reading the cookie,
// we need to distinguish those cases where a cookie is NOT present (e.g. not
// set in the SetForwardingPipelineConfigRequest, therefore we wrap the actual
// uint64 value in a protobuf message.
type ForwardingPipelineConfig_Cookie struct {
	Cookie               uint64   `protobuf:"varint,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardingPipelineConfig_Cookie) Reset()         { *m = ForwardingPipelineConfig_Cookie{} }
func (m *ForwardingPipelineConfig_Cookie) String() string { return proto.CompactTextString(m) }
func (*ForwardingPipelineConfig_Cookie) ProtoMessage()    {}
func (*ForwardingPipelineConfig_Cookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{43, 0}
}

func (m *ForwardingPipelineConfig_Cookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingPipelineConfig_Cookie.Unmarshal(m, b)
}
func (m *ForwardingPipelineConfig_Cookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingPipelineConfig_Cookie.Marshal(b, m, deterministic)
}
func (m *ForwardingPipelineConfig_Cookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingPipelineConfig_Cookie.Merge(m, src)
}
func (m *ForwardingPipelineConfig_Cookie) XXX_Size() int {
	return xxx_messageInfo_ForwardingPipelineConfig_Cookie.Size(m)
}
func (m *ForwardingPipelineConfig_Cookie) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingPipelineConfig_Cookie.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingPipelineConfig_Cookie proto.InternalMessageInfo

func (m *ForwardingPipelineConfig_Cookie) GetCookie() uint64 {
	if m != nil {
		return m.Cookie
	}
	return 0
}

type GetForwardingPipelineConfigRequest struct {
	DeviceId             uint64                                          `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ResponseType         GetForwardingPipelineConfigRequest_ResponseType `protobuf:"varint,2,opt,name=response_type,json=responseType,proto3,enum=p4.v1.GetForwardingPipelineConfigRequest_ResponseType" json:"response_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *GetForwardingPipelineConfigRequest) Reset()         { *m = GetForwardingPipelineConfigRequest{} }
func (m *GetForwardingPipelineConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetForwardingPipelineConfigRequest) ProtoMessage()    {}
func (*GetForwardingPipelineConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{44}
}

func (m *GetForwardingPipelineConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetForwardingPipelineConfigRequest.Unmarshal(m, b)
}
func (m *GetForwardingPipelineConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetForwardingPipelineConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetForwardingPipelineConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetForwardingPipelineConfigRequest.Merge(m, src)
}
func (m *GetForwardingPipelineConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetForwardingPipelineConfigRequest.Size(m)
}
func (m *GetForwardingPipelineConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetForwardingPipelineConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetForwardingPipelineConfigRequest proto.InternalMessageInfo

func (m *GetForwardingPipelineConfigRequest) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *GetForwardingPipelineConfigRequest) GetResponseType() GetForwardingPipelineConfigRequest_ResponseType {
	if m != nil {
		return m.ResponseType
	}
	return GetForwardingPipelineConfigRequest_ALL
}

type GetForwardingPipelineConfigResponse struct {
	Config               *ForwardingPipelineConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetForwardingPipelineConfigResponse) Reset()         { *m = GetForwardingPipelineConfigResponse{} }
func (m *GetForwardingPipelineConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetForwardingPipelineConfigResponse) ProtoMessage()    {}
func (*GetForwardingPipelineConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{45}
}

func (m *GetForwardingPipelineConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetForwardingPipelineConfigResponse.Unmarshal(m, b)
}
func (m *GetForwardingPipelineConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetForwardingPipelineConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetForwardingPipelineConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetForwardingPipelineConfigResponse.Merge(m, src)
}
func (m *GetForwardingPipelineConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetForwardingPipelineConfigResponse.Size(m)
}
func (m *GetForwardingPipelineConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetForwardingPipelineConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetForwardingPipelineConfigResponse proto.InternalMessageInfo

func (m *GetForwardingPipelineConfigResponse) GetConfig() *ForwardingPipelineConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// Error message used to report a single P4-entity error for a Write RPC.
type Error struct {
	// gRPC canonical error code (see
	// github.com/grpc/grpc-go/blob/master/codes/codes.go)
	CanonicalCode int32 `protobuf:"varint,1,opt,name=canonical_code,json=canonicalCode,proto3" json:"canonical_code,omitempty"`
	// Detailed error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Target and architecture specific space to which this error belongs.
	// We encourage using triplet: <target>-<arch>-<vendor>,
	// e.g."targetX-psa-vendor1" or "targetY-psa-vendor2".
	Space string `protobuf:"bytes,3,opt,name=space,proto3" json:"space,omitempty"`
	// Numeric code drawn from target-specific error space above.
	Code int32 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// Optional: Allows reporting back additional target-specific details on the
	// error.
	Details              *any.Any `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_f04a34d76d4bee6f, []int{46}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCanonicalCode() int32 {
	if m != nil {
		return m.CanonicalCode
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetSpace() string {
	if m != nil {
		return m.Space
	}
	return ""
}

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDetails() *any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterEnum("p4.v1.SdnPort", SdnPort_name, SdnPort_value)
	proto.RegisterEnum("p4.v1.WriteRequest_Atomicity", WriteRequest_Atomicity_name, WriteRequest_Atomicity_value)
	proto.RegisterEnum("p4.v1.Update_Type", Update_Type_name, Update_Type_value)
	proto.RegisterEnum("p4.v1.SetForwardingPipelineConfigRequest_Action", SetForwardingPipelineConfigRequest_Action_name, SetForwardingPipelineConfigRequest_Action_value)
	proto.RegisterEnum("p4.v1.GetForwardingPipelineConfigRequest_ResponseType", GetForwardingPipelineConfigRequest_ResponseType_name, GetForwardingPipelineConfigRequest_ResponseType_value)
	proto.RegisterType((*WriteRequest)(nil), "p4.v1.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "p4.v1.WriteResponse")
	proto.RegisterType((*ReadRequest)(nil), "p4.v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "p4.v1.ReadResponse")
	proto.RegisterType((*Update)(nil), "p4.v1.Update")
	proto.RegisterType((*Entity)(nil), "p4.v1.Entity")
	proto.RegisterType((*ExternEntry)(nil), "p4.v1.ExternEntry")
	proto.RegisterType((*TableEntry)(nil), "p4.v1.TableEntry")
	proto.RegisterType((*TableEntry_IdleTimeout)(nil), "p4.v1.TableEntry.IdleTimeout")
	proto.RegisterType((*FieldMatch)(nil), "p4.v1.FieldMatch")
	proto.RegisterType((*FieldMatch_Exact)(nil), "p4.v1.FieldMatch.Exact")
	proto.RegisterType((*FieldMatch_Ternary)(nil), "p4.v1.FieldMatch.Ternary")
	proto.RegisterType((*FieldMatch_LPM)(nil), "p4.v1.FieldMatch.LPM")
	proto.RegisterType((*FieldMatch_Range)(nil), "p4.v1.FieldMatch.Range")
	proto.RegisterType((*TableAction)(nil), "p4.v1.TableAction")
	proto.RegisterType((*Action)(nil), "p4.v1.Action")
	proto.RegisterType((*Action_Param)(nil), "p4.v1.Action.Param")
	proto.RegisterType((*ActionProfileActionSet)(nil), "p4.v1.ActionProfileActionSet")
	proto.RegisterType((*ActionProfileAction)(nil), "p4.v1.ActionProfileAction")
	proto.RegisterType((*ActionProfileMember)(nil), "p4.v1.ActionProfileMember")
	proto.RegisterType((*ActionProfileGroup)(nil), "p4.v1.ActionProfileGroup")
	proto.RegisterType((*ActionProfileGroup_Member)(nil), "p4.v1.ActionProfileGroup.Member")
	proto.RegisterType((*Index)(nil), "p4.v1.Index")
	proto.RegisterType((*MeterEntry)(nil), "p4.v1.MeterEntry")
	proto.RegisterType((*DirectMeterEntry)(nil), "p4.v1.DirectMeterEntry")
	proto.RegisterType((*MeterConfig)(nil), "p4.v1.MeterConfig")
	proto.RegisterType((*CounterEntry)(nil), "p4.v1.CounterEntry")
	proto.RegisterType((*DirectCounterEntry)(nil), "p4.v1.DirectCounterEntry")
	proto.RegisterType((*CounterData)(nil), "p4.v1.CounterData")
	proto.RegisterType((*PacketReplicationEngineEntry)(nil), "p4.v1.PacketReplicationEngineEntry")
	proto.RegisterType((*Replica)(nil), "p4.v1.Replica")
	proto.RegisterType((*MulticastGroupEntry)(nil), "p4.v1.MulticastGroupEntry")
	proto.RegisterType((*CloneSessionEntry)(nil), "p4.v1.CloneSessionEntry")
	proto.RegisterType((*ValueSetMember)(nil), "p4.v1.ValueSetMember")
	proto.RegisterType((*ValueSetEntry)(nil), "p4.v1.ValueSetEntry")
	proto.RegisterType((*RegisterEntry)(nil), "p4.v1.RegisterEntry")
	proto.RegisterType((*DigestEntry)(nil), "p4.v1.DigestEntry")
	proto.RegisterType((*DigestEntry_Config)(nil), "p4.v1.DigestEntry.Config")
	proto.RegisterType((*StreamMessageRequest)(nil), "p4.v1.StreamMessageRequest")
	proto.RegisterType((*PacketOut)(nil), "p4.v1.PacketOut")
	proto.RegisterType((*DigestListAck)(nil), "p4.v1.DigestListAck")
	proto.RegisterType((*StreamMessageResponse)(nil), "p4.v1.StreamMessageResponse")
	proto.RegisterType((*PacketIn)(nil), "p4.v1.PacketIn")
	proto.RegisterType((*DigestList)(nil), "p4.v1.DigestList")
	proto.RegisterType((*PacketMetadata)(nil), "p4.v1.PacketMetadata")
	proto.RegisterType((*MasterArbitrationUpdate)(nil), "p4.v1.MasterArbitrationUpdate")
	proto.RegisterType((*Role)(nil), "p4.v1.Role")
	proto.RegisterType((*IdleTimeoutNotification)(nil), "p4.v1.IdleTimeoutNotification")
	proto.RegisterType((*Uint128)(nil), "p4.v1.Uint128")
	proto.RegisterType((*SetForwardingPipelineConfigRequest)(nil), "p4.v1.SetForwardingPipelineConfigRequest")
	proto.RegisterType((*SetForwardingPipelineConfigResponse)(nil), "p4.v1.SetForwardingPipelineConfigResponse")
	proto.RegisterType((*ForwardingPipelineConfig)(nil), "p4.v1.ForwardingPipelineConfig")
	proto.RegisterType((*ForwardingPipelineConfig_Cookie)(nil), "p4.v1.ForwardingPipelineConfig.Cookie")
	proto.RegisterType((*GetForwardingPipelineConfigRequest)(nil), "p4.v1.GetForwardingPipelineConfigRequest")
	proto.RegisterType((*GetForwardingPipelineConfigResponse)(nil), "p4.v1.GetForwardingPipelineConfigResponse")
	proto.RegisterType((*Error)(nil), "p4.v1.Error")
}

func init() { proto.RegisterFile("p4/v1/p4runtime.proto", fileDescriptor_f04a34d76d4bee6f) }

var fileDescriptor_f04a34d76d4bee6f = []byte{
	// 3074 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x3a, 0x4b, 0x6f, 0xe3, 0xd6,
	0xb9, 0xa6, 0x9e, 0xf6, 0x27, 0xc9, 0x96, 0x8f, 0xed, 0xb1, 0xad, 0x19, 0xdf, 0x99, 0x30, 0x99,
	0xc9, 0xcc, 0x64, 0xae, 0x9c, 0x71, 0x9c, 0x9b, 0x17, 0x6e, 0x00, 0x8d, 0x2c, 0xdb, 0xbc, 0x91,
	0x25, 0xe1, 0xc8, 0x33, 0x49, 0xee, 0xbd, 0x2d, 0x41, 0x93, 0xc7, 0x32, 0x63, 0x8a, 0x64, 0x49,
	0xda, 0x63, 0x07, 0xdd, 0x15, 0x45, 0x80, 0xa2, 0xe8, 0xaa, 0xbf, 0xa0, 0xeb, 0x2e, 0xbb, 0xc8,
	0x0f, 0xe8, 0xa6, 0xdb, 0xa2, 0x40, 0xff, 0x44, 0xb7, 0xdd, 0x14, 0x08, 0x52, 0x9c, 0x17, 0x45,
	0x4a, 0xb2, 0xc7, 0x93, 0x06, 0xf5, 0x8a, 0xe7, 0x7b, 0x9d, 0x73, 0xbe, 0xf7, 0x77, 0x64, 0x58,
	0xf1, 0xb7, 0x37, 0xcf, 0x9f, 0x6e, 0xfa, 0xdb, 0xc1, 0x99, 0x1b, 0xd9, 0x43, 0x52, 0xf7, 0x03,
	0x2f, 0xf2, 0x50, 0xde, 0xdf, 0xae, 0x9f, 0x3f, 0xad, 0xad, 0x0f, 0x3c, 0x6f, 0xe0, 0x90, 0x4d,
	0x06, 0x3c, 0x3a, 0x3b, 0xde, 0x34, 0xdc, 0x4b, 0x4e, 0x51, 0xbb, 0xe5, 0x6f, 0x6f, 0x0a, 0x6c,
	0x18, 0x19, 0xd1, 0x59, 0x28, 0xe0, 0xeb, 0xfe, 0xf6, 0xa6, 0xe9, 0xb9, 0xc7, 0xf6, 0x80, 0xcb,
	0xb5, 0xdd, 0x63, 0x4f, 0xa0, 0x90, 0xdc, 0xcb, 0x32, 0x22, 0x83, 0xc3, 0xd4, 0xdf, 0x67, 0xa0,
	0xfc, 0x79, 0x60, 0x47, 0x04, 0x93, 0x9f, 0x9d, 0x91, 0x30, 0x42, 0xb7, 0x61, 0xce, 0x22, 0xe7,
	0xb6, 0x49, 0x74, 0xdb, 0x5a, 0x53, 0xee, 0x29, 0x0f, 0x73, 0x78, 0x96, 0x03, 0x34, 0x0b, 0xad,
	0x42, 0x31, 0xf0, 0x1c, 0x86, 0xca, 0x30, 0x54, 0x81, 0x2e, 0x35, 0x0b, 0x6d, 0x42, 0x89, 0x38,
	0xc4, 0x8c, 0x6c, 0xcf, 0xa5, 0xc8, 0xec, 0x3d, 0xe5, 0x61, 0x69, 0x6b, 0xbe, 0xce, 0x6e, 0x51,
	0x7f, 0x6e, 0xbb, 0xd1, 0xd3, 0xad, 0x0f, 0x31, 0x48, 0x12, 0xcd, 0x42, 0x6f, 0x43, 0xf1, 0xcc,
	0xb7, 0x8c, 0x88, 0x84, 0x6b, 0xb9, 0x7b, 0xd9, 0x87, 0xa5, 0xad, 0x8a, 0x24, 0x66, 0x50, 0x2c,
	0xb1, 0xe8, 0x13, 0x98, 0x33, 0x22, 0x6f, 0x68, 0x9b, 0x76, 0x74, 0xb9, 0x96, 0xbf, 0xa7, 0x3c,
	0x9c, 0xdf, 0xda, 0x10, 0xa4, 0xc9, 0x73, 0xd7, 0x1b, 0x92, 0x08, 0x8f, 0xe8, 0xd5, 0x2e, 0xcc,
	0xc5, 0x70, 0xb4, 0x02, 0x8b, 0xcd, 0x6e, 0xe7, 0x50, 0xeb, 0x3c, 0x6f, 0xe9, 0xdd, 0x8e, 0xde,
	0xc2, 0xb8, 0x8b, 0xab, 0x33, 0x14, 0x8c, 0xbb, 0xed, 0xf6, 0xb3, 0x46, 0xf3, 0xb3, 0x11, 0x58,
	0x41, 0xcb, 0x50, 0xdd, 0x69, 0x1c, 0x36, 0x7a, 0xed, 0x46, 0xa7, 0xa5, 0x37, 0x0e, 0xbb, 0x07,
	0x5a, 0xb3, 0x9a, 0x51, 0x17, 0xa0, 0x22, 0x76, 0x0d, 0x7d, 0xcf, 0x0d, 0x89, 0xfa, 0x1c, 0x4a,
	0x98, 0x18, 0xd6, 0x8d, 0xb4, 0xf7, 0x08, 0x66, 0x89, 0x1b, 0xd9, 0x91, 0x4d, 0xc2, 0xb5, 0x4c,
	0xea, 0xd2, 0x2d, 0x0a, 0xbe, 0xc4, 0x31, 0x5a, 0xfd, 0x08, 0xca, 0x5c, 0x2c, 0xdf, 0x26, 0xc5,
	0xaa, 0x5c, 0xcf, 0xfa, 0x5b, 0x05, 0x0a, 0x5c, 0x89, 0xe8, 0x01, 0xe4, 0xa2, 0x4b, 0x9f, 0xb0,
	0x83, 0xcc, 0x6f, 0xa1, 0x94, 0x86, 0xeb, 0x87, 0x97, 0x3e, 0xc1, 0x0c, 0x8f, 0xee, 0x43, 0x81,
	0xb1, 0x5f, 0x32, 0xab, 0x4e, 0xc8, 0x16, 0x48, 0xf5, 0x13, 0xc8, 0x51, 0x26, 0xb4, 0x00, 0xa5,
	0xe7, 0x9d, 0x7e, 0xaf, 0xd5, 0xd4, 0x76, 0xb5, 0xd6, 0x4e, 0x75, 0x06, 0x01, 0x14, 0xb4, 0x4e,
	0xbf, 0x85, 0x0f, 0xab, 0x0a, 0xfd, 0x3e, 0xe8, 0xee, 0x68, 0xbb, 0x5f, 0x56, 0x33, 0xf4, 0x7b,
	0xa7, 0xd5, 0x6e, 0x1d, 0xb6, 0xaa, 0x59, 0xf5, 0xcf, 0x05, 0x28, 0x70, 0x79, 0xe8, 0x03, 0x28,
	0x93, 0x8b, 0x88, 0x04, 0xae, 0x4e, 0xdc, 0x28, 0xb8, 0x64, 0xc7, 0x2b, 0xc5, 0xc7, 0x6b, 0x31,
	0x54, 0x8b, 0x62, 0xf6, 0x67, 0x70, 0x89, 0x8c, 0x96, 0x68, 0x1b, 0x4a, 0x91, 0x71, 0xe4, 0x10,
	0xc1, 0xc7, 0x0f, 0xbb, 0x28, 0xf8, 0x0e, 0x29, 0x46, 0xb2, 0x41, 0x14, 0xaf, 0x50, 0x0f, 0x56,
	0x0c, 0xee, 0x99, 0x7e, 0xe0, 0x1d, 0xdb, 0x0e, 0xd1, 0x87, 0x64, 0x78, 0x44, 0x02, 0xe1, 0xa5,
	0x35, 0xc1, 0xdf, 0x60, 0x34, 0x3d, 0x4e, 0x72, 0xc0, 0x28, 0xf6, 0x67, 0xf0, 0x92, 0x31, 0x09,
	0x46, 0x07, 0xb0, 0x3c, 0x26, 0x71, 0x10, 0x78, 0x67, 0xfe, 0x5a, 0x8e, 0x09, 0x5c, 0x9f, 0x26,
	0x70, 0x8f, 0x12, 0xec, 0xcf, 0x60, 0x64, 0x4c, 0x40, 0xe9, 0xb5, 0x86, 0x24, 0x22, 0x81, 0xb8,
	0x56, 0x3e, 0x75, 0xad, 0x03, 0x8a, 0x89, 0xaf, 0x35, 0x8c, 0x57, 0x68, 0x0f, 0x90, 0x65, 0x07,
	0xc4, 0x8c, 0xf4, 0x24, 0x73, 0x81, 0x31, 0xaf, 0x0a, 0xe6, 0x1d, 0x46, 0x90, 0x12, 0x51, 0xb5,
	0xc6, 0x60, 0xe8, 0x63, 0xa8, 0x98, 0xde, 0x99, 0x3b, 0x92, 0x51, 0x64, 0x32, 0x96, 0x84, 0x8c,
	0x26, 0xc7, 0x49, 0xfe, 0xb2, 0x99, 0x58, 0x53, 0x4d, 0x88, 0x43, 0xa4, 0x45, 0xcc, 0xa6, 0x34,
	0xc1, 0x8f, 0x31, 0x26, 0x48, 0x9c, 0x3e, 0x09, 0x45, 0x0e, 0xdc, 0xf5, 0x0d, 0xf3, 0x94, 0x44,
	0x7a, 0x40, 0x7c, 0xc7, 0x36, 0x0d, 0xa6, 0x64, 0xe2, 0x0e, 0x6c, 0x57, 0x1a, 0x7d, 0x8e, 0x49,
	0x7e, 0x53, 0x48, 0xee, 0x31, 0x6a, 0x3c, 0x22, 0x6e, 0x31, 0x5a, 0xb9, 0xc7, 0x1d, 0xff, 0x1a,
	0x3c, 0xfa, 0x14, 0x16, 0xce, 0x0d, 0xe7, 0x8c, 0xe8, 0x21, 0x89, 0x84, 0x74, 0x60, 0xd2, 0x97,
	0x85, 0xf4, 0x17, 0x14, 0xdb, 0x27, 0x91, 0x14, 0x57, 0x39, 0x4f, 0x02, 0xd0, 0x7f, 0xc3, 0x7c,
	0x40, 0x06, 0x76, 0x38, 0xba, 0x76, 0x29, 0xc5, 0x8e, 0x05, 0x32, 0x66, 0x0f, 0x92, 0x00, 0x1a,
	0x06, 0x96, 0x3d, 0x20, 0xa1, 0xdc, 0xbb, 0x9c, 0x0a, 0x83, 0x1d, 0x86, 0x8a, 0xc3, 0xc0, 0x1a,
	0x2d, 0x9f, 0xcd, 0xca, 0x70, 0x55, 0x7f, 0x0e, 0xa5, 0x44, 0xb8, 0xa0, 0xb7, 0x60, 0x5e, 0x04,
	0x16, 0x0d, 0x6b, 0x99, 0x82, 0x2a, 0x58, 0x84, 0x1b, 0x0d, 0x5e, 0xcd, 0xa2, 0x39, 0x4a, 0x50,
	0x89, 0x34, 0x5e, 0xc1, 0xb3, 0x1c, 0xa0, 0x59, 0xe8, 0x31, 0xe4, 0xf9, 0x69, 0xb2, 0xe2, 0x2a,
	0xbc, 0xc6, 0xd4, 0x65, 0x05, 0xaa, 0x37, 0xdc, 0x4b, 0xcc, 0x49, 0xd4, 0x6f, 0x72, 0x00, 0xa3,
	0xa8, 0x43, 0xeb, 0x30, 0xcb, 0xa3, 0x33, 0xde, 0xb7, 0xc8, 0xd6, 0x2c, 0xdb, 0xe7, 0x87, 0x46,
	0x64, 0x9e, 0x88, 0xb4, 0x27, 0x7d, 0x7b, 0xd7, 0x26, 0x8e, 0x75, 0x40, 0x11, 0x98, 0xe3, 0xd1,
	0x63, 0x28, 0xf0, 0x00, 0x11, 0xfb, 0xa3, 0x64, 0x70, 0xf3, 0x80, 0xc2, 0x82, 0x02, 0xd5, 0x60,
	0xd6, 0x0f, 0x6c, 0x2f, 0xa0, 0x79, 0x8b, 0x46, 0x5e, 0x1e, 0xc7, 0x6b, 0xb4, 0x09, 0x4b, 0xa6,
	0xe7, 0x46, 0x81, 0xe7, 0x38, 0x24, 0xa0, 0x01, 0x62, 0xd0, 0x9a, 0xc7, 0x42, 0x2b, 0x87, 0xd1,
	0x08, 0x75, 0x20, 0x30, 0xe8, 0x7d, 0x28, 0xf3, 0x30, 0xe2, 0xb5, 0x53, 0xc4, 0x11, 0x4a, 0x06,
	0x61, 0x93, 0x61, 0x30, 0x8f, 0x55, 0xbe, 0xa0, 0x6c, 0xd2, 0xf1, 0xd9, 0x06, 0xc5, 0x14, 0x9b,
	0xf0, 0xed, 0x1d, 0x23, 0x32, 0x70, 0xc9, 0x1c, 0x2d, 0xd0, 0x63, 0x58, 0xb4, 0x43, 0xdd, 0x22,
	0xc7, 0xc6, 0x99, 0x13, 0xe9, 0xe2, 0xc6, 0x34, 0x66, 0x66, 0xf1, 0x82, 0x1d, 0xee, 0x70, 0x38,
	0xbf, 0x2e, 0x7a, 0x00, 0x0b, 0xb6, 0xe5, 0x10, 0x9d, 0x76, 0x07, 0xde, 0x59, 0xa4, 0xbb, 0x21,
	0x8b, 0x81, 0x2c, 0xae, 0x50, 0xf0, 0x21, 0x87, 0x76, 0x42, 0xd4, 0x86, 0x25, 0x4a, 0xa2, 0x87,
	0xb6, 0x6b, 0x12, 0xdd, 0x31, 0xc2, 0x48, 0x3f, 0xb1, 0x23, 0xe1, 0xd1, 0x1b, 0x13, 0x49, 0xb2,
	0xae, 0x8d, 0xb8, 0x71, 0x95, 0x72, 0xf6, 0x29, 0x63, 0xdb, 0x08, 0xa3, 0x7d, 0x3b, 0xaa, 0x3d,
	0x81, 0x52, 0x82, 0x00, 0x6d, 0x00, 0x10, 0xc7, 0xf0, 0x43, 0x62, 0xd1, 0xfd, 0x15, 0xb6, 0xff,
	0x9c, 0x80, 0x74, 0x42, 0xf5, 0x6f, 0x59, 0x80, 0x91, 0x31, 0xa9, 0x27, 0x1c, 0xd3, 0x55, 0xc2,
	0x13, 0xd8, 0x9a, 0x35, 0x0a, 0x79, 0x72, 0x61, 0x98, 0x91, 0x48, 0xde, 0xab, 0x13, 0x9e, 0x50,
	0x6f, 0x51, 0xf4, 0xfe, 0x0c, 0xe6, 0x74, 0xe8, 0x7d, 0x28, 0x52, 0xd7, 0x34, 0x62, 0x97, 0x5c,
	0x9f, 0x64, 0x39, 0xe4, 0x04, 0xfb, 0x33, 0x58, 0xd2, 0xa2, 0x47, 0x90, 0x75, 0xfc, 0xa1, 0xc8,
	0xc8, 0x2b, 0x93, 0x2c, 0xed, 0xde, 0xc1, 0xfe, 0x0c, 0xa6, 0x34, 0xf4, 0x48, 0x81, 0xe1, 0x0e,
	0xc8, 0x58, 0xee, 0x4c, 0x10, 0x63, 0x8a, 0xa6, 0x47, 0x62, 0x74, 0xe8, 0x09, 0xe4, 0xbd, 0xe8,
	0x84, 0x04, 0x6b, 0xd6, 0xd5, 0x31, 0x42, 0xa9, 0x19, 0x51, 0x6d, 0x03, 0xf2, 0xec, 0x4a, 0x68,
	0x19, 0xf2, 0x2c, 0x7f, 0x30, 0x95, 0x94, 0x31, 0x5f, 0xd4, 0xde, 0x83, 0xa2, 0x38, 0xfe, 0x74,
	0x02, 0x84, 0x20, 0x37, 0x34, 0xc2, 0x53, 0xa6, 0xb0, 0x32, 0x66, 0xdf, 0xb5, 0x8f, 0x21, 0xdb,
	0xee, 0x1d, 0x5c, 0xc1, 0xb0, 0x01, 0xe0, 0x07, 0xe4, 0xd8, 0xbe, 0xd0, 0x1d, 0xe2, 0x32, 0xb6,
	0x3c, 0x9e, 0xe3, 0x90, 0x36, 0x71, 0x6b, 0xff, 0x09, 0x79, 0x76, 0x1f, 0x54, 0x85, 0xac, 0xe3,
	0xbd, 0x14, 0xbc, 0xf4, 0x93, 0x6e, 0x75, 0x62, 0x0f, 0x4e, 0xe4, 0x56, 0xf4, 0xfb, 0x19, 0x82,
	0x2a, 0xb7, 0x25, 0x0b, 0x50, 0x96, 0x58, 0xd4, 0xdf, 0x64, 0xa0, 0x94, 0x88, 0x48, 0xf4, 0x76,
	0x1c, 0xb5, 0x4a, 0xaa, 0x7f, 0xe0, 0xe8, 0xfd, 0x99, 0x38, 0x64, 0x3f, 0x82, 0xb5, 0xa9, 0xa5,
	0x38, 0xce, 0x44, 0xfb, 0x33, 0x78, 0x65, 0x4a, 0xc5, 0xd5, 0x2c, 0xf4, 0x01, 0xac, 0x4e, 0xab,
	0xb9, 0xb2, 0xdb, 0xa4, 0x9c, 0xcb, 0x93, 0xb5, 0x55, 0xb3, 0xd0, 0xff, 0xc2, 0xfa, 0x18, 0xa3,
	0x58, 0x86, 0x24, 0x12, 0xfe, 0xb1, 0x31, 0xad, 0x62, 0xf3, 0x45, 0x9f, 0x50, 0x5f, 0xbc, 0x65,
	0x4c, 0xc5, 0x3c, 0x2b, 0xf0, 0x06, 0x4b, 0xfd, 0xb5, 0x02, 0x05, 0xa1, 0x8b, 0xdb, 0x30, 0x67,
	0xc4, 0x7d, 0x30, 0x77, 0xfe, 0x59, 0x43, 0x76, 0xbd, 0xef, 0x40, 0xc1, 0x37, 0x02, 0x63, 0x28,
	0x9b, 0xde, 0xa5, 0xd4, 0xc6, 0xf5, 0x1e, 0xc5, 0x61, 0x41, 0x52, 0xfb, 0x10, 0xf2, 0x0c, 0x40,
	0xc3, 0x89, 0x81, 0x46, 0xf9, 0xba, 0xc8, 0xd6, 0x9a, 0x35, 0xf2, 0x80, 0x6c, 0xc2, 0x03, 0xd4,
	0xaf, 0xe0, 0xd6, 0xf4, 0xab, 0xa0, 0x1e, 0xdc, 0x9a, 0xaa, 0x0c, 0xd9, 0x55, 0xd6, 0xae, 0xd6,
	0xc4, 0x98, 0x7a, 0x39, 0x30, 0x54, 0xbf, 0x82, 0xa5, 0x29, 0xc4, 0xb4, 0xa5, 0xbc, 0xc6, 0x25,
	0x62, 0x87, 0xb8, 0x05, 0x85, 0x97, 0xc4, 0x1e, 0x9c, 0x44, 0xc2, 0x4f, 0xc5, 0x8a, 0xde, 0xeb,
	0x25, 0x2b, 0x18, 0x59, 0x06, 0xe6, 0x0b, 0xf5, 0x97, 0xca, 0xd8, 0x66, 0xa2, 0x1f, 0x7b, 0x0c,
	0x8b, 0x63, 0xb7, 0x8a, 0x75, 0xbf, 0x90, 0x3a, 0x34, 0xaf, 0x7e, 0x63, 0x3e, 0x87, 0x67, 0x87,
	0xd2, 0xc9, 0xee, 0x8f, 0x95, 0x9f, 0xe9, 0xa7, 0x56, 0xbf, 0xc9, 0x00, 0x9a, 0xec, 0xee, 0x5e,
	0xeb, 0x18, 0xeb, 0x30, 0x1b, 0xfb, 0xaf, 0xb0, 0xe9, 0x40, 0x38, 0xec, 0xc7, 0x50, 0xe4, 0x07,
	0x0a, 0xd7, 0xb2, 0xcc, 0x28, 0xf7, 0xae, 0x6c, 0x28, 0xeb, 0x5c, 0x01, 0x58, 0x32, 0x50, 0xb1,
	0x43, 0xe3, 0x42, 0x0f, 0xed, 0xaf, 0x89, 0xa8, 0x89, 0xc5, 0xa1, 0x71, 0xd1, 0xb7, 0xbf, 0x26,
	0xb5, 0x3e, 0x14, 0x84, 0xba, 0x52, 0x2a, 0x50, 0xc6, 0x54, 0x70, 0x23, 0x8b, 0x54, 0xa4, 0x45,
	0x36, 0x20, 0xaf, 0xb9, 0x16, 0xb9, 0xa0, 0x68, 0x9b, 0x7e, 0x88, 0xda, 0xc0, 0x17, 0xea, 0x4b,
	0x80, 0x44, 0xa3, 0x49, 0x0f, 0xc7, 0x6a, 0xec, 0xa8, 0x2c, 0xb0, 0xb5, 0x66, 0x21, 0x55, 0xb2,
	0xf3, 0xb2, 0x50, 0x16, 0x37, 0x66, 0xb2, 0x85, 0x30, 0xda, 0x1b, 0x88, 0xe2, 0x9c, 0xbd, 0xb2,
	0x38, 0x0b, 0x0a, 0x35, 0x80, 0xea, 0x78, 0xef, 0x8b, 0xb6, 0xd2, 0xd3, 0x83, 0x72, 0xc5, 0xf4,
	0x90, 0x9a, 0x1d, 0x46, 0x7b, 0x66, 0x5e, 0xb9, 0xa7, 0x01, 0xa5, 0x04, 0x98, 0xa6, 0x57, 0xd3,
	0x0e, 0x84, 0x3e, 0xe8, 0x27, 0x55, 0xad, 0x79, 0x74, 0x16, 0x84, 0x5c, 0xb5, 0x59, 0x2c, 0x56,
	0x94, 0xd2, 0xb7, 0xf9, 0x38, 0x92, 0xc5, 0xf4, 0x93, 0x52, 0xfa, 0x9c, 0x32, 0xc7, 0x29, 0xf9,
	0x4a, 0xbd, 0x84, 0x72, 0xaa, 0x5f, 0xde, 0x00, 0x90, 0xed, 0x47, 0xac, 0xd3, 0x39, 0x01, 0xb9,
	0xa1, 0x56, 0x1f, 0x40, 0x8e, 0x75, 0x2e, 0xd9, 0x2b, 0x3b, 0x17, 0x86, 0x57, 0x7d, 0x40, 0x93,
	0x6d, 0xfc, 0x0f, 0xd2, 0xa9, 0xdc, 0x31, 0xf3, 0x8a, 0x1d, 0xbb, 0x50, 0x4a, 0x00, 0xe9, 0x5d,
	0x8f, 0x2e, 0x23, 0xc2, 0x07, 0x0d, 0xd9, 0x82, 0x50, 0x08, 0x23, 0x42, 0x6f, 0x40, 0x59, 0x8c,
	0x0e, 0x9c, 0x80, 0xab, 0xb8, 0xc4, 0x61, 0x8c, 0x44, 0xfd, 0xa3, 0x02, 0x77, 0xae, 0x1b, 0x18,
	0xe8, 0xa4, 0x38, 0x3c, 0x73, 0x22, 0xdb, 0xa4, 0xcd, 0x13, 0x0f, 0xcf, 0xe4, 0xbd, 0x64, 0x72,
	0x3c, 0x90, 0x34, 0x2c, 0x06, 0x65, 0x8b, 0xbe, 0x34, 0x9c, 0x04, 0xa3, 0xff, 0x81, 0x25, 0xd3,
	0xf1, 0x5c, 0x3a, 0x62, 0x84, 0x21, 0x9f, 0x65, 0x46, 0x93, 0xeb, 0x9a, 0xbc, 0x3a, 0xa5, 0xe8,
	0x73, 0x02, 0x29, 0x6d, 0xd1, 0x1c, 0x07, 0xc6, 0xc5, 0x66, 0x17, 0x8a, 0xe2, 0xfc, 0xe8, 0x2e,
	0x94, 0xc8, 0x20, 0x20, 0x61, 0xa8, 0xfb, 0x5e, 0x10, 0x09, 0x07, 0x00, 0x0e, 0xea, 0x79, 0x41,
	0x44, 0x7b, 0x64, 0xdb, 0x0d, 0x23, 0xc3, 0x35, 0x89, 0x4c, 0x76, 0x72, 0xad, 0x7a, 0xb0, 0x34,
	0xe5, 0x26, 0xe8, 0x09, 0xa0, 0x71, 0x25, 0xc4, 0xbe, 0x55, 0x4d, 0xdf, 0x91, 0xcd, 0x0b, 0xb3,
	0x62, 0x54, 0x93, 0x6f, 0x1a, 0xf3, 0xf1, 0xf4, 0xc3, 0xc0, 0x38, 0xc6, 0xab, 0xdf, 0x2a, 0xb0,
	0x38, 0x71, 0x57, 0x6a, 0x57, 0xa9, 0x9c, 0x91, 0x0f, 0x0b, 0xc8, 0xeb, 0x6d, 0x80, 0x1e, 0x42,
	0xd5, 0x74, 0x8c, 0x30, 0xd4, 0xbd, 0x63, 0x3d, 0x24, 0xc1, 0xb9, 0x6d, 0x12, 0x91, 0xae, 0xe6,
	0x19, 0xbc, 0x7b, 0xdc, 0xe7, 0x50, 0x54, 0x87, 0x25, 0xe1, 0x2d, 0x0e, 0x71, 0x07, 0xd1, 0x89,
	0x4e, 0x1d, 0x29, 0x14, 0x29, 0x73, 0x91, 0xa3, 0xda, 0x0c, 0xf3, 0x8c, 0x22, 0xd4, 0x8f, 0x60,
	0x5e, 0x0e, 0x83, 0x22, 0x89, 0xc6, 0x23, 0x8d, 0x72, 0xfd, 0x48, 0xa3, 0x1e, 0x41, 0x25, 0x35,
	0x47, 0xa2, 0x7b, 0x50, 0x1e, 0x8d, 0x9d, 0xf1, 0x95, 0x41, 0xce, 0x96, 0xac, 0x49, 0x8e, 0x2b,
	0x00, 0xbf, 0xf2, 0xca, 0xd8, 0x40, 0x3a, 0x96, 0xf6, 0xd5, 0x97, 0x50, 0x49, 0x0d, 0x9b, 0xd4,
	0x31, 0xe2, 0xd1, 0x74, 0xb4, 0x85, 0x04, 0xdd, 0x30, 0x35, 0xbc, 0x91, 0x4a, 0x0d, 0xb2, 0x16,
	0xf6, 0xb6, 0x13, 0x31, 0xfa, 0x57, 0x05, 0x4a, 0x89, 0x49, 0x95, 0xbd, 0x7f, 0xf1, 0x99, 0x76,
	0x54, 0x5a, 0x38, 0x40, 0xb3, 0xd0, 0xd3, 0xb1, 0x64, 0xba, 0x3e, 0x39, 0xea, 0xd6, 0xd3, 0x39,
	0xb5, 0x76, 0x01, 0x05, 0x91, 0x4e, 0xdf, 0x82, 0x79, 0x5a, 0xd9, 0x12, 0x53, 0x10, 0x4f, 0x01,
	0xe5, 0xa1, 0x71, 0x31, 0x1a, 0x82, 0x54, 0xa8, 0x50, 0x2a, 0xc7, 0x0e, 0x23, 0x5e, 0x04, 0x79,
	0x11, 0x2b, 0x0d, 0x8d, 0x8b, 0xb6, 0x1d, 0x46, 0xb4, 0x10, 0x52, 0x49, 0x86, 0x79, 0x9a, 0x94,
	0xc4, 0x33, 0x6f, 0xd9, 0x30, 0x4f, 0x63, 0x49, 0xea, 0xdf, 0x15, 0x58, 0xee, 0x47, 0x01, 0x31,
	0x86, 0x07, 0x24, 0x0c, 0x8d, 0x41, 0xfc, 0x40, 0xfa, 0x0c, 0x4a, 0x46, 0x70, 0x64, 0x47, 0x81,
	0x91, 0x68, 0x6f, 0xfe, 0x43, 0xa6, 0x06, 0x83, 0xea, 0xb7, 0x31, 0xc2, 0xf3, 0xc7, 0x36, 0x3a,
	0xc1, 0x27, 0x98, 0x68, 0x59, 0xe1, 0x3e, 0x26, 0x34, 0x51, 0x4d, 0x3d, 0x67, 0x74, 0xcf, 0x68,
	0xcf, 0x29, 0x28, 0xd0, 0xfb, 0x00, 0x42, 0xa5, 0x86, 0x79, 0x1a, 0x8f, 0xe5, 0x49, 0xcd, 0xd1,
	0x9b, 0x35, 0xcc, 0xd3, 0xfd, 0x19, 0x2c, 0x94, 0xdf, 0x30, 0x4f, 0x47, 0x43, 0x4a, 0xee, 0x06,
	0x43, 0xca, 0xb3, 0x59, 0x28, 0xf0, 0x07, 0x57, 0xf5, 0x0b, 0x98, 0x8b, 0x4f, 0x81, 0xd6, 0xa0,
	0xe8, 0x1b, 0x97, 0x8e, 0x67, 0x58, 0x62, 0x4c, 0x90, 0x4b, 0xf4, 0x94, 0xd5, 0x72, 0x43, 0x24,
	0xf2, 0xa4, 0x8f, 0x72, 0x6e, 0x39, 0x58, 0xe3, 0x98, 0x4c, 0x6d, 0x41, 0x25, 0x75, 0xde, 0xeb,
	0x9d, 0x65, 0x15, 0x8a, 0xcc, 0x8a, 0xa3, 0xa7, 0x66, 0xba, 0xd4, 0x2c, 0xf5, 0x4f, 0x19, 0x58,
	0x19, 0x33, 0x8c, 0x78, 0x24, 0xfd, 0x31, 0x2c, 0xf3, 0x68, 0xcc, 0x32, 0x0b, 0xa9, 0x5b, 0x69,
	0x6e, 0xc2, 0x30, 0xef, 0x40, 0x81, 0x9f, 0x56, 0x18, 0x65, 0x71, 0xc2, 0x28, 0x94, 0x98, 0x93,
	0xa0, 0xff, 0x87, 0xf5, 0xf4, 0x14, 0xef, 0x45, 0xf6, 0xb1, 0x28, 0x41, 0xc2, 0x44, 0xf2, 0xa4,
	0x89, 0xb9, 0xbb, 0x93, 0xa0, 0xda, 0x9f, 0xc1, 0xab, 0xf6, 0x74, 0xd4, 0xc8, 0xd8, 0xf9, 0xd7,
	0x33, 0xf6, 0xe7, 0x30, 0x2b, 0x2f, 0xf6, 0xe3, 0xda, 0xfa, 0x17, 0x0a, 0xc0, 0x48, 0x0f, 0x3f,
	0xcc, 0xd2, 0x89, 0xfc, 0x93, 0xbd, 0x22, 0xff, 0xa0, 0x3b, 0x30, 0x47, 0x35, 0x1a, 0x46, 0xc6,
	0xd0, 0x17, 0xbd, 0xd2, 0x08, 0xa0, 0xee, 0xc1, 0x7c, 0xfa, 0x84, 0x34, 0x2f, 0xca, 0x33, 0x26,
	0xf2, 0xa2, 0x04, 0x25, 0x07, 0xaa, 0x4c, 0x72, 0xa0, 0xfa, 0x83, 0x02, 0xab, 0x57, 0x38, 0xd0,
	0xf5, 0x4f, 0xfe, 0x77, 0x21, 0x17, 0x78, 0x0e, 0x11, 0xce, 0x54, 0x92, 0x95, 0xcb, 0x73, 0x08,
	0x66, 0x88, 0xd7, 0xff, 0xe1, 0xe4, 0x31, 0x14, 0xf8, 0xef, 0x3d, 0xc2, 0x6b, 0x90, 0xb4, 0x75,
	0xe0, 0x9b, 0xf5, 0x3e, 0xc3, 0x60, 0x41, 0xa1, 0xee, 0x40, 0x8e, 0x6e, 0x85, 0xe6, 0x21, 0x13,
	0x9f, 0x2d, 0x63, 0x5b, 0xe8, 0xc9, 0x58, 0x22, 0x9e, 0xfe, 0xca, 0x27, 0xfb, 0xda, 0x53, 0x58,
	0xbd, 0xc2, 0x25, 0x27, 0xdb, 0xbf, 0xec, 0xab, 0xdb, 0xbf, 0x94, 0xc9, 0x32, 0xe3, 0x26, 0xdb,
	0x84, 0xa2, 0xb8, 0x75, 0xfc, 0x1a, 0xc1, 0xcf, 0xcd, 0xbe, 0xe5, 0x9b, 0x05, 0xf7, 0x13, 0xfa,
	0xa9, 0x7e, 0x93, 0x05, 0xb5, 0x4f, 0xa2, 0x5d, 0x2f, 0x78, 0x69, 0x04, 0x96, 0xed, 0x0e, 0x7a,
	0xb6, 0x4f, 0x1c, 0xdb, 0x25, 0xa2, 0x92, 0xfc, 0x7b, 0x7f, 0xd6, 0xda, 0x8f, 0x07, 0xc8, 0x1c,
	0xfb, 0xcd, 0xe5, 0x5d, 0x41, 0xfb, 0xea, 0x13, 0x8e, 0x4f, 0xc6, 0x1f, 0xc4, 0x36, 0xe2, 0x31,
	0x7d, 0x57, 0x36, 0x18, 0x57, 0x89, 0x91, 0xe6, 0x7a, 0x19, 0x3f, 0x45, 0x4c, 0xfb, 0x9d, 0xe6,
	0x45, 0x0b, 0x6b, 0xbb, 0x5f, 0x56, 0x15, 0xb4, 0x04, 0x0b, 0xfc, 0x5b, 0x6f, 0x74, 0x76, 0xf4,
	0x7e, 0xe3, 0x45, 0xab, 0x9a, 0x41, 0x2b, 0xb0, 0x98, 0x00, 0x36, 0xbb, 0x07, 0x07, 0xda, 0x61,
	0x35, 0x4b, 0xf9, 0xc4, 0x77, 0x0e, 0xad, 0xc1, 0x32, 0x6e, 0x35, 0xbb, 0x9d, 0xa6, 0xd6, 0x6e,
	0x25, 0xa9, 0xf2, 0xea, 0x7d, 0x78, 0xf3, 0xda, 0x6b, 0x8a, 0x5f, 0xcc, 0xfe, 0xa2, 0xc0, 0xda,
	0x55, 0x44, 0xd4, 0x33, 0xf9, 0x4f, 0x96, 0x22, 0x7b, 0xb3, 0x42, 0xc7, 0x2f, 0xc6, 0x63, 0x5f,
	0x73, 0x8f, 0x3d, 0x2c, 0x68, 0x68, 0xbf, 0xe7, 0x6f, 0xeb, 0xc2, 0xae, 0x09, 0x8f, 0x2e, 0xe3,
	0x79, 0x7f, 0x7b, 0x87, 0x81, 0x85, 0xdc, 0x4f, 0xa9, 0x36, 0xbd, 0x53, 0x9b, 0x08, 0x1b, 0x3e,
	0x78, 0x85, 0x36, 0xeb, 0x4d, 0x46, 0x8d, 0x05, 0x57, 0xed, 0x1e, 0xed, 0x43, 0xe8, 0x17, 0x1b,
	0xe2, 0xb8, 0x24, 0xee, 0x45, 0x62, 0xa5, 0x7e, 0xa7, 0x80, 0xba, 0xf7, 0x2f, 0xfa, 0xe1, 0xff,
	0x41, 0x25, 0x10, 0x6a, 0x62, 0x0f, 0x6d, 0xec, 0x32, 0xf3, 0x5b, 0xff, 0x25, 0x0e, 0xfb, 0x6a,
	0xf1, 0x75, 0xa9, 0x65, 0xf6, 0xe3, 0x5e, 0x39, 0x48, 0xac, 0xd4, 0x9f, 0x40, 0x39, 0x89, 0x45,
	0x45, 0xc8, 0x36, 0xda, 0xed, 0xea, 0x0c, 0x75, 0x93, 0x66, 0xb7, 0xfb, 0x99, 0xd6, 0xd2, 0xbb,
	0x9d, 0x36, 0x75, 0x8d, 0x15, 0x58, 0xec, 0x6d, 0x6b, 0x9d, 0xdd, 0xae, 0xb0, 0x2f, 0xc5, 0x55,
	0x33, 0xe8, 0x0e, 0xac, 0xed, 0xb4, 0x5e, 0x68, 0xcd, 0x96, 0xde, 0xec, 0x76, 0x76, 0xb5, 0xbd,
	0x24, 0x36, 0xab, 0xfe, 0x14, 0xde, 0xdc, 0x7b, 0xb5, 0xf5, 0x13, 0x6e, 0xad, 0xbc, 0x9e, 0x5b,
	0xff, 0x4e, 0x81, 0x7c, 0x2b, 0x08, 0xbc, 0x00, 0xdd, 0x87, 0x79, 0xd3, 0x70, 0x3d, 0xd7, 0x36,
	0x0d, 0x47, 0x37, 0x3d, 0x8b, 0x5b, 0x22, 0x8f, 0x2b, 0x31, 0xb4, 0xe9, 0x59, 0x84, 0xd6, 0xb3,
	0x21, 0x6f, 0x10, 0x98, 0x1a, 0xe7, 0xb0, 0x5c, 0xd2, 0x1c, 0x1f, 0xfa, 0x86, 0x98, 0x0d, 0xe6,
	0x30, 0x5f, 0xd0, 0x74, 0xc3, 0x84, 0xf1, 0x19, 0x80, 0x7d, 0xa3, 0x3a, 0x14, 0x2d, 0x12, 0x19,
	0xb6, 0x13, 0x5e, 0x57, 0x59, 0xb1, 0x24, 0x7a, 0xfc, 0x2b, 0x05, 0x8a, 0x7d, 0xcb, 0x65, 0xa3,
	0xd7, 0x32, 0x54, 0xfb, 0x3b, 0x1d, 0xbd, 0xd7, 0xc5, 0x87, 0xfa, 0xf3, 0xce, 0x67, 0x9d, 0xee,
	0xe7, 0x9d, 0xea, 0x0c, 0xaa, 0x42, 0x39, 0x86, 0x1e, 0x68, 0x9d, 0xaa, 0x82, 0xd6, 0x93, 0x90,
	0xc6, 0x17, 0xd5, 0xef, 0xbf, 0xfb, 0x9e, 0xff, 0x29, 0xe8, 0x0d, 0x58, 0x8e, 0x51, 0xb8, 0xd5,
	0xd4, 0x70, 0xf3, 0x79, 0xbb, 0x71, 0xd8, 0xaa, 0xfe, 0xe3, 0xfb, 0x98, 0x24, 0xc9, 0xdd, 0xec,
	0x3d, 0xaf, 0x7e, 0x17, 0xa3, 0xb6, 0xbe, 0xcd, 0xc2, 0x5c, 0x6f, 0x1b, 0xf3, 0xff, 0x2b, 0x40,
	0xdb, 0x90, 0x67, 0xbf, 0x5c, 0xa3, 0xa5, 0x29, 0xbf, 0x9e, 0xd7, 0x96, 0xd3, 0x40, 0x11, 0xaa,
	0x33, 0xe8, 0x3d, 0xc8, 0x61, 0x62, 0x58, 0x08, 0xc5, 0x33, 0x57, 0xfc, 0x5b, 0x77, 0x6d, 0x29,
	0x05, 0x93, 0x2c, 0xef, 0x2a, 0xe8, 0x1c, 0x6e, 0x5f, 0x93, 0x08, 0xd0, 0xa3, 0x1b, 0xe7, 0xc4,
	0xda, 0xe3, 0x9b, 0x90, 0xc6, 0x87, 0x3d, 0x87, 0xdb, 0x7b, 0x37, 0xd8, 0x77, 0xef, 0xe6, 0xfb,
	0xee, 0xdd, 0x68, 0xdf, 0x1e, 0x54, 0x78, 0x43, 0xda, 0x3c, 0x31, 0x5c, 0x97, 0x38, 0xe8, 0xb6,
	0x3c, 0xf6, 0x94, 0xf9, 0xa1, 0x76, 0x67, 0x3a, 0x52, 0x4a, 0x7b, 0xa8, 0xbc, 0xab, 0x1c, 0x15,
	0x98, 0x7b, 0xbd, 0xf7, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x4f, 0xc9, 0x3b, 0x1e, 0x22,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// P4RuntimeClient is the p4lib API for P4Runtime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type P4RuntimeClient interface {
	// Update one or more P4 entities on the target.
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	// Read one or more P4 entities from the target.
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (P4Runtime_ReadClient, error)
	// Sets the P4 forwarding-pipeline config.
	SetForwardingPipelineConfig(ctx context.Context, in *SetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*SetForwardingPipelineConfigResponse, error)
	// Gets the current P4 forwarding-pipeline config.
	GetForwardingPipelineConfig(ctx context.Context, in *GetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*GetForwardingPipelineConfigResponse, error)
	// Represents the bidirectional stream between the controller and the
	// switch (initiated by the controller), and is managed for the following
	// purposes:
	// - connection initiation through master arbitration
	// - indicating switch session liveness: the session is live when switch
	//   sends a positive master arbitration update to the controller, and is
	//   considered dead when either the stream breaks or the switch sends a
	//   negative update for master arbitration
	// - the controller sending/receiving packets to/from the switch
	// - streaming of notifications from the switch
	StreamChannel(ctx context.Context, opts ...grpc.CallOption) (P4Runtime_StreamChannelClient, error)
}

type p4RuntimeClient struct {
	cc *grpc.ClientConn
}

func NewP4RuntimeClient(cc *grpc.ClientConn) P4RuntimeClient {
	return &p4RuntimeClient{cc}
}

func (c *p4RuntimeClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/p4.v1.P4Runtime/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (P4Runtime_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P4Runtime_serviceDesc.Streams[0], "/p4.v1.P4Runtime/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &p4RuntimeReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type P4Runtime_ReadClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type p4RuntimeReadClient struct {
	grpc.ClientStream
}

func (x *p4RuntimeReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *p4RuntimeClient) SetForwardingPipelineConfig(ctx context.Context, in *SetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*SetForwardingPipelineConfigResponse, error) {
	out := new(SetForwardingPipelineConfigResponse)
	err := c.cc.Invoke(ctx, "/p4.v1.P4Runtime/SetForwardingPipelineConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) GetForwardingPipelineConfig(ctx context.Context, in *GetForwardingPipelineConfigRequest, opts ...grpc.CallOption) (*GetForwardingPipelineConfigResponse, error) {
	out := new(GetForwardingPipelineConfigResponse)
	err := c.cc.Invoke(ctx, "/p4.v1.P4Runtime/GetForwardingPipelineConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *p4RuntimeClient) StreamChannel(ctx context.Context, opts ...grpc.CallOption) (P4Runtime_StreamChannelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P4Runtime_serviceDesc.Streams[1], "/p4.v1.P4Runtime/StreamChannel", opts...)
	if err != nil {
		return nil, err
	}
	x := &p4RuntimeStreamChannelClient{stream}
	return x, nil
}

type P4Runtime_StreamChannelClient interface {
	Send(*StreamMessageRequest) error
	Recv() (*StreamMessageResponse, error)
	grpc.ClientStream
}

type p4RuntimeStreamChannelClient struct {
	grpc.ClientStream
}

func (x *p4RuntimeStreamChannelClient) Send(m *StreamMessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *p4RuntimeStreamChannelClient) Recv() (*StreamMessageResponse, error) {
	m := new(StreamMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// P4RuntimeServer is the server API for P4Runtime service.
type P4RuntimeServer interface {
	// Update one or more P4 entities on the target.
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	// Read one or more P4 entities from the target.
	Read(*ReadRequest, P4Runtime_ReadServer) error
	// Sets the P4 forwarding-pipeline config.
	SetForwardingPipelineConfig(context.Context, *SetForwardingPipelineConfigRequest) (*SetForwardingPipelineConfigResponse, error)
	// Gets the current P4 forwarding-pipeline config.
	GetForwardingPipelineConfig(context.Context, *GetForwardingPipelineConfigRequest) (*GetForwardingPipelineConfigResponse, error)
	// Represents the bidirectional stream between the controller and the
	// switch (initiated by the controller), and is managed for the following
	// purposes:
	// - connection initiation through master arbitration
	// - indicating switch session liveness: the session is live when switch
	//   sends a positive master arbitration update to the controller, and is
	//   considered dead when either the stream breaks or the switch sends a
	//   negative update for master arbitration
	// - the controller sending/receiving packets to/from the switch
	// - streaming of notifications from the switch
	StreamChannel(P4Runtime_StreamChannelServer) error
}

// UnimplementedP4RuntimeServer can be embedded to have forward compatible implementations.
type UnimplementedP4RuntimeServer struct {
}

func (*UnimplementedP4RuntimeServer) Write(ctx context.Context, req *WriteRequest) (*WriteResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedP4RuntimeServer) Read(req *ReadRequest, srv P4Runtime_ReadServer) error {
	return status1.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedP4RuntimeServer) SetForwardingPipelineConfig(ctx context.Context, req *SetForwardingPipelineConfigRequest) (*SetForwardingPipelineConfigResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SetForwardingPipelineConfig not implemented")
}
func (*UnimplementedP4RuntimeServer) GetForwardingPipelineConfig(ctx context.Context, req *GetForwardingPipelineConfigRequest) (*GetForwardingPipelineConfigResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetForwardingPipelineConfig not implemented")
}
func (*UnimplementedP4RuntimeServer) StreamChannel(srv P4Runtime_StreamChannelServer) error {
	return status1.Errorf(codes.Unimplemented, "method StreamChannel not implemented")
}

func RegisterP4RuntimeServer(s *grpc.Server, srv P4RuntimeServer) {
	s.RegisterService(&_P4Runtime_serviceDesc, srv)
}

func _P4Runtime_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/p4.v1.P4Runtime/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(P4RuntimeServer).Read(m, &p4RuntimeReadServer{stream})
}

type P4Runtime_ReadServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type p4RuntimeReadServer struct {
	grpc.ServerStream
}

func (x *p4RuntimeReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _P4Runtime_SetForwardingPipelineConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetForwardingPipelineConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).SetForwardingPipelineConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/p4.v1.P4Runtime/SetForwardingPipelineConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).SetForwardingPipelineConfig(ctx, req.(*SetForwardingPipelineConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_GetForwardingPipelineConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetForwardingPipelineConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(P4RuntimeServer).GetForwardingPipelineConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/p4.v1.P4Runtime/GetForwardingPipelineConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(P4RuntimeServer).GetForwardingPipelineConfig(ctx, req.(*GetForwardingPipelineConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _P4Runtime_StreamChannel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(P4RuntimeServer).StreamChannel(&p4RuntimeStreamChannelServer{stream})
}

type P4Runtime_StreamChannelServer interface {
	Send(*StreamMessageResponse) error
	Recv() (*StreamMessageRequest, error)
	grpc.ServerStream
}

type p4RuntimeStreamChannelServer struct {
	grpc.ServerStream
}

func (x *p4RuntimeStreamChannelServer) Send(m *StreamMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *p4RuntimeStreamChannelServer) Recv() (*StreamMessageRequest, error) {
	m := new(StreamMessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _P4Runtime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "p4.v1.P4Runtime",
	HandlerType: (*P4RuntimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _P4Runtime_Write_Handler,
		},
		{
			MethodName: "SetForwardingPipelineConfig",
			Handler:    _P4Runtime_SetForwardingPipelineConfig_Handler,
		},
		{
			MethodName: "GetForwardingPipelineConfig",
			Handler:    _P4Runtime_GetForwardingPipelineConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _P4Runtime_Read_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamChannel",
			Handler:       _P4Runtime_StreamChannel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "p4/v1/p4runtime.proto",
}
